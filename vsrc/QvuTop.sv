// Generated by CIRCT firtool-1.62.0
// external module LZC

module BarrelShifter(	// src/main/scala/qvu/BarrelShift.scala:13:7
  input  [30:0] io_operand_i,	// src/main/scala/qvu/BarrelShift.scala:14:14
  input  [4:0]  io_shift_amount,	// src/main/scala/qvu/BarrelShift.scala:14:14
  output [30:0] io_result_o	// src/main/scala/qvu/BarrelShift.scala:14:14
);

  wire [30:0] _temp_results_3_T_2 =
    io_shift_amount[4] ? {io_operand_i[14:0], 16'h0} : io_operand_i;	// src/main/scala/qvu/BarrelShift.scala:32:{33,49,70}
  wire [30:0] _temp_results_2_T_2 =
    io_shift_amount[3] ? {_temp_results_3_T_2[22:0], 8'h0} : _temp_results_3_T_2;	// src/main/scala/qvu/BarrelShift.scala:32:{33,49,70}
  wire [30:0] _temp_results_1_T_2 =
    io_shift_amount[2] ? {_temp_results_2_T_2[26:0], 4'h0} : _temp_results_2_T_2;	// src/main/scala/qvu/BarrelShift.scala:32:{33,49,70}
  wire [30:0] _temp_results_0_T_2 =
    io_shift_amount[1] ? {_temp_results_1_T_2[28:0], 2'h0} : _temp_results_1_T_2;	// src/main/scala/qvu/BarrelShift.scala:32:{33,49,70}
  assign io_result_o =
    io_shift_amount[0] ? {_temp_results_0_T_2[29:0], 1'h0} : _temp_results_0_T_2;	// src/main/scala/qvu/BarrelShift.scala:13:7, :32:33, :42:{23,39,60}
endmodule

module PositDecode(	// src/main/scala/qvu/PositDecode.scala:7:7
  input  [3:0][31:0] io_posit,	// src/main/scala/qvu/PositDecode.scala:12:14
  output [3:0]       io_Sign,	// src/main/scala/qvu/PositDecode.scala:12:14
  output [3:0][7:0]  io_Exp,	// src/main/scala/qvu/PositDecode.scala:12:14
  output [3:0][27:0] io_Frac	// src/main/scala/qvu/PositDecode.scala:12:14
);

  wire [3:0]  isNaR;	// src/main/scala/qvu/PositDecode.scala:23:14
  wire [30:0] _barrel_shifter_3_io_result_o;	// src/main/scala/qvu/PositDecode.scala:72:32
  wire [30:0] _barrel_shifter_2_io_result_o;	// src/main/scala/qvu/PositDecode.scala:72:32
  wire [30:0] _barrel_shifter_1_io_result_o;	// src/main/scala/qvu/PositDecode.scala:72:32
  wire [30:0] _barrel_shifter_io_result_o;	// src/main/scala/qvu/PositDecode.scala:72:32
  wire [4:0]  _lzcModule_3_cnt_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire        _lzcModule_3_empty_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire [4:0]  _lzcModule_2_cnt_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire        _lzcModule_2_empty_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire [4:0]  _lzcModule_1_cnt_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire        _lzcModule_1_empty_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire [4:0]  _lzcModule_cnt_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire        _lzcModule_empty_o;	// src/main/scala/qvu/PositDecode.scala:46:27
  wire [3:0]  _GEN =
    {{io_posit[2'h3][31]},
     {io_posit[2'h2][31]},
     {io_posit[2'h1][31]},
     {io_posit[2'h0][31]}};	// src/main/scala/qvu/PositDecode.scala:23:{14,29}, :29:16, :82:19
  assign isNaR =
    _GEN
    & {{io_posit[2'h3][30:0] == 31'h0},
       {io_posit[2'h2][30:0] == 31'h0},
       {io_posit[2'h1][30:0] == 31'h0},
       {io_posit[2'h0][30:0] == 31'h0}};	// src/main/scala/qvu/PositDecode.scala:23:{14,29,69,88}, :29:16, :82:19
  wire [30:0] _operand_0_T_6 =
    io_posit[2'h0][31] ? ~(io_posit[2'h0][30:0]) + 31'h1 : io_posit[2'h0][30:0];	// src/main/scala/qvu/PositDecode.scala:23:{29,69}, :30:{22,44,77}, :82:19
  wire [30:0] _operand_1_T_6 =
    io_posit[2'h1][31] ? ~(io_posit[2'h1][30:0]) + 31'h1 : io_posit[2'h1][30:0];	// src/main/scala/qvu/PositDecode.scala:23:{29,69}, :29:16, :30:{22,44,77}
  wire [30:0] _operand_2_T_6 =
    io_posit[2'h2][31] ? ~(io_posit[2'h2][30:0]) + 31'h1 : io_posit[2'h2][30:0];	// src/main/scala/qvu/PositDecode.scala:23:{29,69}, :29:16, :30:{22,44,77}
  wire [30:0] _operand_3_T_6 =
    io_posit[2'h3][31] ? ~(io_posit[2'h3][30:0]) + 31'h1 : io_posit[2'h3][30:0];	// src/main/scala/qvu/PositDecode.scala:23:{29,69}, :29:16, :30:{22,44,77}
  LZC #(
    .MODE(1),
    .WIDTH(31)
  ) lzcModule (	// src/main/scala/qvu/PositDecode.scala:46:27
    .in_i    ({31{_operand_0_T_6[30]}} ^ _operand_0_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22, :40:33, :41:26
    .cnt_o   (_lzcModule_cnt_o),
    .empty_o (_lzcModule_empty_o)
  );
  LZC #(
    .MODE(1),
    .WIDTH(31)
  ) lzcModule_1 (	// src/main/scala/qvu/PositDecode.scala:46:27
    .in_i    ({31{_operand_1_T_6[30]}} ^ _operand_1_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22, :40:33, :41:26
    .cnt_o   (_lzcModule_1_cnt_o),
    .empty_o (_lzcModule_1_empty_o)
  );
  LZC #(
    .MODE(1),
    .WIDTH(31)
  ) lzcModule_2 (	// src/main/scala/qvu/PositDecode.scala:46:27
    .in_i    ({31{_operand_2_T_6[30]}} ^ _operand_2_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22, :40:33, :41:26
    .cnt_o   (_lzcModule_2_cnt_o),
    .empty_o (_lzcModule_2_empty_o)
  );
  LZC #(
    .MODE(1),
    .WIDTH(31)
  ) lzcModule_3 (	// src/main/scala/qvu/PositDecode.scala:46:27
    .in_i    ({31{_operand_3_T_6[30]}} ^ _operand_3_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22, :40:33, :41:26
    .cnt_o   (_lzcModule_3_cnt_o),
    .empty_o (_lzcModule_3_empty_o)
  );
  BarrelShifter barrel_shifter (	// src/main/scala/qvu/PositDecode.scala:72:32
    .io_operand_i    (_operand_0_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22
    .io_shift_amount (_lzcModule_cnt_o + 5'h1),	// src/main/scala/qvu/PositDecode.scala:46:27, :63:61, :74:54
    .io_result_o     (_barrel_shifter_io_result_o)
  );
  BarrelShifter barrel_shifter_1 (	// src/main/scala/qvu/PositDecode.scala:72:32
    .io_operand_i    (_operand_1_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22
    .io_shift_amount (_lzcModule_1_cnt_o + 5'h1),	// src/main/scala/qvu/PositDecode.scala:46:27, :63:61, :74:54
    .io_result_o     (_barrel_shifter_1_io_result_o)
  );
  BarrelShifter barrel_shifter_2 (	// src/main/scala/qvu/PositDecode.scala:72:32
    .io_operand_i    (_operand_2_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22
    .io_shift_amount (_lzcModule_2_cnt_o + 5'h1),	// src/main/scala/qvu/PositDecode.scala:46:27, :63:61, :74:54
    .io_result_o     (_barrel_shifter_2_io_result_o)
  );
  BarrelShifter barrel_shifter_3 (	// src/main/scala/qvu/PositDecode.scala:72:32
    .io_operand_i    (_operand_3_T_6),	// src/main/scala/qvu/PositDecode.scala:30:22
    .io_shift_amount (_lzcModule_3_cnt_o + 5'h1),	// src/main/scala/qvu/PositDecode.scala:46:27, :63:61, :74:54
    .io_result_o     (_barrel_shifter_3_io_result_o)
  );
  assign io_Sign = _GEN;	// src/main/scala/qvu/PositDecode.scala:7:7, :23:14
  assign io_Exp =
    {{isNaR[2'h3]
        ? 8'h0
        : {_lzcModule_3_empty_o
             ? 6'h0
             : _operand_3_T_6[30]
                 ? {1'h0, _lzcModule_3_cnt_o - 5'h1}
                 : {1'h1, ~_lzcModule_3_cnt_o + 5'h1},
           _lzcModule_3_empty_o ? 2'h0 : _barrel_shifter_3_io_result_o[30:29]}},
     {isNaR[2'h2]
        ? 8'h0
        : {_lzcModule_2_empty_o
             ? 6'h0
             : _operand_2_T_6[30]
                 ? {1'h0, _lzcModule_2_cnt_o - 5'h1}
                 : {1'h1, ~_lzcModule_2_cnt_o + 5'h1},
           _lzcModule_2_empty_o ? 2'h0 : _barrel_shifter_2_io_result_o[30:29]}},
     {isNaR[2'h1]
        ? 8'h0
        : {_lzcModule_1_empty_o
             ? 6'h0
             : _operand_1_T_6[30]
                 ? {1'h0, _lzcModule_1_cnt_o - 5'h1}
                 : {1'h1, ~_lzcModule_1_cnt_o + 5'h1},
           _lzcModule_1_empty_o ? 2'h0 : _barrel_shifter_1_io_result_o[30:29]}},
     {isNaR[2'h0]
        ? 8'h0
        : {_lzcModule_empty_o
             ? 6'h0
             : _operand_0_T_6[30]
                 ? {1'h0, _lzcModule_cnt_o - 5'h1}
                 : {1'h1, ~_lzcModule_cnt_o + 5'h1},
           _lzcModule_empty_o ? 2'h0 : _barrel_shifter_io_result_o[30:29]}}};	// src/main/scala/qvu/PositDecode.scala:7:7, :23:{14,45,88}, :29:16, :30:22, :40:33, :46:27, :60:32, :61:22, :63:{22,29,48,61,72,78,86}, :72:32, :81:35, :82:19, :84:{19,44}, :88:20, :89:17, :91:{17,23}
  assign io_Frac =
    {{isNaR[2'h3] ? 28'h0 : {|_operand_3_T_6, _barrel_shifter_3_io_result_o[28:2]}},
     {isNaR[2'h2] ? 28'h0 : {|_operand_2_T_6, _barrel_shifter_2_io_result_o[28:2]}},
     {isNaR[2'h1] ? 28'h0 : {|_operand_1_T_6, _barrel_shifter_1_io_result_o[28:2]}},
     {isNaR[2'h0] ? 28'h0 : {|_operand_0_T_6, _barrel_shifter_io_result_o[28:2]}}};	// src/main/scala/qvu/PositDecode.scala:7:7, :23:14, :29:16, :30:22, :72:32, :82:19, :101:56, :104:20, :105:18, :107:{18,24,65}
endmodule

module FloatDecode(	// src/main/scala/qvu/FloatDecode.scala:19:7
  input  [3:0][31:0] io_float,	// src/main/scala/qvu/FloatDecode.scala:23:14
  output [3:0]       io_Sign,	// src/main/scala/qvu/FloatDecode.scala:23:14
  output [3:0][8:0]  io_Exp,	// src/main/scala/qvu/FloatDecode.scala:23:14
  output [3:0][23:0] io_Frac,	// src/main/scala/qvu/FloatDecode.scala:23:14
  output [3:0]       io_isNaN,	// src/main/scala/qvu/FloatDecode.scala:23:14
                     io_isInf,	// src/main/scala/qvu/FloatDecode.scala:23:14
                     io_isZero	// src/main/scala/qvu/FloatDecode.scala:23:14
);

  wire       isExpAllZeros = io_float[2'h0][30:23] == 8'h0;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :44:34
  wire [7:0] _effectiveExp_T_1 = io_float[2'h0][30:23] - 8'h7F;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :61:45
  wire       isExpAllZeros_1 = io_float[2'h1][30:23] == 8'h0;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :44:34
  wire [7:0] _effectiveExp_T_5 = io_float[2'h1][30:23] - 8'h7F;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :61:45
  wire       isExpAllZeros_2 = io_float[2'h2][30:23] == 8'h0;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :44:34
  wire [7:0] _effectiveExp_T_9 = io_float[2'h2][30:23] - 8'h7F;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :61:45
  wire       isExpAllZeros_3 = io_float[2'h3][30:23] == 8'h0;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :44:34
  wire [7:0] _effectiveExp_T_13 = io_float[2'h3][30:23] - 8'h7F;	// src/main/scala/qvu/FloatDecode.scala:38:22, :39:22, :61:45
  wire [3:0] _GEN =
    {{&(io_float[2'h3][30:23])},
     {&(io_float[2'h2][30:23])},
     {&(io_float[2'h1][30:23])},
     {&(io_float[2'h0][30:23])}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22, :39:22, :43:34
  wire [3:0] _GEN_0 =
    {{io_float[2'h3][22:0] == 23'h0},
     {io_float[2'h2][22:0] == 23'h0},
     {io_float[2'h1][22:0] == 23'h0},
     {io_float[2'h0][22:0] == 23'h0}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22, :40:22, :46:47
  assign io_Sign =
    {{io_float[2'h3][31]},
     {io_float[2'h2][31]},
     {io_float[2'h1][31]},
     {io_float[2'h0][31]}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22
  assign io_Exp =
    {{isExpAllZeros_3
        ? 9'h182
        : (&(io_float[2'h3][30:23]))
            ? 9'h0
            : {_effectiveExp_T_13[7], _effectiveExp_T_13}},
     {isExpAllZeros_2
        ? 9'h182
        : (&(io_float[2'h2][30:23])) ? 9'h0 : {_effectiveExp_T_9[7], _effectiveExp_T_9}},
     {isExpAllZeros_1
        ? 9'h182
        : (&(io_float[2'h1][30:23])) ? 9'h0 : {_effectiveExp_T_5[7], _effectiveExp_T_5}},
     {isExpAllZeros
        ? 9'h182
        : (&(io_float[2'h0][30:23])) ? 9'h0 : {_effectiveExp_T_1[7], _effectiveExp_T_1}}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22, :39:22, :43:34, :44:34, :57:26, :58:25, :60:33, :61:{25,45}, :64:25
  assign io_Frac =
    {{{~isExpAllZeros_3 & ~(&(io_float[2'h3][30:23])), io_float[2'h3][22:0]}},
     {{~isExpAllZeros_2 & ~(&(io_float[2'h2][30:23])), io_float[2'h2][22:0]}},
     {{~isExpAllZeros_1 & ~(&(io_float[2'h1][30:23])), io_float[2'h1][22:0]}},
     {{~isExpAllZeros & ~(&(io_float[2'h0][30:23])), io_float[2'h0][22:0]}}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22, :39:22, :40:22, :43:34, :44:34, :57:26, :59:25, :60:33, :62:25, :65:25
  assign io_isNaN =
    _GEN
    & {{|(io_float[2'h3][22:0])},
       {|(io_float[2'h2][22:0])},
       {|(io_float[2'h1][22:0])},
       {|(io_float[2'h0][22:0])}};	// src/main/scala/qvu/FloatDecode.scala:19:7, :38:22, :40:22, :47:47
  assign io_isInf = _GEN & _GEN_0;	// src/main/scala/qvu/FloatDecode.scala:19:7
  assign io_isZero =
    {{isExpAllZeros_3}, {isExpAllZeros_2}, {isExpAllZeros_1}, {isExpAllZeros}} & _GEN_0;	// src/main/scala/qvu/FloatDecode.scala:19:7, :44:34
endmodule

module PositQuantizeToInt8(	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
  input              clock,	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
                     reset,	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
  input  [3:0]       io_pir_sign_i,	// src/main/scala/qvu/PositQuantizeToInt8.scala:31:14
  input  [3:0][7:0]  io_pir_exp_i,	// src/main/scala/qvu/PositQuantizeToInt8.scala:31:14
  input  [3:0][32:0] io_pir_frac_i,	// src/main/scala/qvu/PositQuantizeToInt8.scala:31:14
  output [3:0][7:0]  io_int8_o	// src/main/scala/qvu/PositQuantizeToInt8.scala:31:14
);

  reg  [32:0] globalMax;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26
  reg  [32:0] globalMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:56:26
  reg  [32:0] globalScale;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28
  reg  [32:0] globalOffset;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29
  reg  [32:0] batchMax;	// src/main/scala/qvu/PositQuantizeToInt8.scala:61:25
  reg  [32:0] batchMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:62:25
  reg         batchHasData;	// src/main/scala/qvu/PositQuantizeToInt8.scala:63:29
  reg  [1:0]  state;	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22
  wire [7:0]  _shiftVal_tmp_T = 8'h1E - io_pir_exp_i[2'h0];	// src/main/scala/qvu/PositQuantizeToInt8.scala:88:19, :96:26, :263:12
  wire [5:0]  shiftVal = $signed(_shiftVal_tmp_T) > -8'sh1 ? _shiftVal_tmp_T[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:96:26, :100:{24,32}, :101:{16,31}, :103:16
  wire [31:0] shiftedFrac =
    shiftVal[5]
      ? {32{io_pir_sign_i[2'h0]}}
      : {io_pir_frac_i[2'h0][27:0], 4'h0} >> shiftVal;	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:{16,22,23}, :100:32, :101:16, :103:16, :111:{20,29}, :112:{19,25}, :115:{19,33}, :263:12
  wire        _GEN = shiftVal == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :116:22
  wire [63:0] _mask_T = 64'h1 << shiftVal;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :119:25
  wire [31:0] _mask_T_1 = _mask_T[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:119:{25,38}
  wire [30:0] _roundedInt_T =
    shiftedFrac[31:1]
    + {30'h0,
       shiftedFrac[0]
         & ((shiftVal[5]
               ? (|(io_pir_frac_i[2'h0][27:0]))
               : ~_GEN
                 & (|(shiftVal[5] | _GEN
                        ? 28'h0
                        : _mask_T_1[31:4] & io_pir_frac_i[2'h0][27:0])))
            | shiftedFrac[1])};	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:16, :100:32, :101:16, :103:16, :109:33, :111:{20,29}, :112:19, :113:{14,28}, :115:19, :116:{22,31}, :117:16, :119:38, :120:{20,34}, :121:{16,30}, :126:26, :127:26, :129:{23,34}, :132:31, :136:30, :263:12
  wire        _GEN_0 =
    io_pir_frac_i[2'h0] == 33'h0 | $signed(io_pir_exp_i[2'h0]) < 8'sh1
    & (|io_pir_frac_i[2'h0]);	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :87:19, :88:{19,27,36}, :139:14, :263:12
  wire [30:0] _rawInts_0_T_3 = ~_roundedInt_T + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:136:30, :149:{22,42}
  wire [32:0] _GEN_1 =
    _GEN_0
      ? 33'h0
      : io_pir_sign_i[2'h0]
          ? {{2{_rawInts_0_T_3[30]}}, _rawInts_0_T_3}
          : {{2{_roundedInt_T[30]}}, _roundedInt_T};	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :92:23, :136:30, :139:{14,23}, :141:18, :143:30, :145:18, :149:{18,42}, :263:12
  wire [7:0]  _shiftVal_tmp_T_3 = 8'h1E - io_pir_exp_i[2'h1];	// src/main/scala/qvu/PositQuantizeToInt8.scala:88:19, :96:26, :149:42
  wire [5:0]  shiftVal_1 =
    $signed(_shiftVal_tmp_T_3) > -8'sh1 ? _shiftVal_tmp_T_3[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:96:26, :100:{24,32}, :101:{16,31}, :103:16
  wire [31:0] shiftedFrac_1 =
    shiftVal_1[5]
      ? {32{io_pir_sign_i[2'h1]}}
      : {io_pir_frac_i[2'h1][27:0], 4'h0} >> shiftVal_1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:{16,22,23}, :100:32, :101:16, :103:16, :111:{20,29}, :112:{19,25}, :115:{19,33}, :149:42
  wire        _GEN_2 = shiftVal_1 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :116:22
  wire [63:0] _mask_T_2 = 64'h1 << shiftVal_1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :119:25
  wire [31:0] _mask_T_3 = _mask_T_2[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:119:{25,38}
  wire [30:0] _roundedInt_T_1 =
    shiftedFrac_1[31:1]
    + {30'h0,
       shiftedFrac_1[0]
         & ((shiftVal_1[5]
               ? (|(io_pir_frac_i[2'h1][27:0]))
               : ~_GEN_2
                 & (|(shiftVal_1[5] | _GEN_2
                        ? 28'h0
                        : _mask_T_3[31:4] & io_pir_frac_i[2'h1][27:0])))
            | shiftedFrac_1[1])};	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:16, :100:32, :101:16, :103:16, :109:33, :111:{20,29}, :112:19, :113:{14,28}, :115:19, :116:{22,31}, :117:16, :119:38, :120:{20,34}, :121:{16,30}, :126:26, :127:26, :129:{23,34}, :132:31, :136:30, :149:42
  wire        _GEN_3 =
    io_pir_frac_i[2'h1] == 33'h0 | $signed(io_pir_exp_i[2'h1]) < 8'sh1
    & (|io_pir_frac_i[2'h1]);	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :87:19, :88:{19,27,36}, :139:14, :149:42
  wire [30:0] _rawInts_1_T_3 = ~_roundedInt_T_1 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:136:30, :149:{22,42}
  wire [32:0] _GEN_4 =
    _GEN_3
      ? 33'h0
      : io_pir_sign_i[2'h1]
          ? {{2{_rawInts_1_T_3[30]}}, _rawInts_1_T_3}
          : {{2{_roundedInt_T_1[30]}}, _roundedInt_T_1};	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :92:23, :136:30, :139:{14,23}, :141:18, :143:30, :145:18, :149:{18,42}
  wire [7:0]  _shiftVal_tmp_T_6 = 8'h1E - io_pir_exp_i[2'h2];	// src/main/scala/qvu/PositQuantizeToInt8.scala:88:19, :96:26, :179:11
  wire [5:0]  shiftVal_2 =
    $signed(_shiftVal_tmp_T_6) > -8'sh1 ? _shiftVal_tmp_T_6[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:96:26, :100:{24,32}, :101:{16,31}, :103:16
  wire [31:0] shiftedFrac_2 =
    shiftVal_2[5]
      ? {32{io_pir_sign_i[2'h2]}}
      : {io_pir_frac_i[2'h2][27:0], 4'h0} >> shiftVal_2;	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:{16,22,23}, :100:32, :101:16, :103:16, :111:{20,29}, :112:{19,25}, :115:{19,33}, :179:11
  wire        _GEN_5 = shiftVal_2 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :116:22
  wire [63:0] _mask_T_4 = 64'h1 << shiftVal_2;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :119:25
  wire [31:0] _mask_T_5 = _mask_T_4[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:119:{25,38}
  wire [30:0] _roundedInt_T_2 =
    shiftedFrac_2[31:1]
    + {30'h0,
       shiftedFrac_2[0]
         & ((shiftVal_2[5]
               ? (|(io_pir_frac_i[2'h2][27:0]))
               : ~_GEN_5
                 & (|(shiftVal_2[5] | _GEN_5
                        ? 28'h0
                        : _mask_T_5[31:4] & io_pir_frac_i[2'h2][27:0])))
            | shiftedFrac_2[1])};	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:16, :100:32, :101:16, :103:16, :109:33, :111:{20,29}, :112:19, :113:{14,28}, :115:19, :116:{22,31}, :117:16, :119:38, :120:{20,34}, :121:{16,30}, :126:26, :127:26, :129:{23,34}, :132:31, :136:30, :179:11
  wire        _GEN_6 =
    io_pir_frac_i[2'h2] == 33'h0 | $signed(io_pir_exp_i[2'h2]) < 8'sh1
    & (|io_pir_frac_i[2'h2]);	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :87:19, :88:{19,27,36}, :139:14, :179:11
  wire [30:0] _rawInts_2_T_3 = ~_roundedInt_T_2 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:136:30, :149:{22,42}
  wire [32:0] _GEN_7 =
    _GEN_6
      ? 33'h0
      : io_pir_sign_i[2'h2]
          ? {{2{_rawInts_2_T_3[30]}}, _rawInts_2_T_3}
          : {{2{_roundedInt_T_2[30]}}, _roundedInt_T_2};	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :92:23, :136:30, :139:{14,23}, :141:18, :143:30, :145:18, :149:{18,42}, :179:11
  wire [7:0]  _shiftVal_tmp_T_9 = 8'h1E - io_pir_exp_i[2'h3];	// src/main/scala/qvu/PositQuantizeToInt8.scala:88:19, :96:26, :229:11
  wire [5:0]  shiftVal_3 =
    $signed(_shiftVal_tmp_T_9) > -8'sh1 ? _shiftVal_tmp_T_9[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:96:26, :100:{24,32}, :101:{16,31}, :103:16
  wire [31:0] shiftedFrac_3 =
    shiftVal_3[5]
      ? {32{io_pir_sign_i[2'h3]}}
      : {io_pir_frac_i[2'h3][27:0], 4'h0} >> shiftVal_3;	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:{16,22,23}, :100:32, :101:16, :103:16, :111:{20,29}, :112:{19,25}, :115:{19,33}, :229:11
  wire        _GEN_8 = shiftVal_3 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :116:22
  wire [63:0] _mask_T_6 = 64'h1 << shiftVal_3;	// src/main/scala/qvu/PositQuantizeToInt8.scala:100:32, :101:16, :103:16, :119:25
  wire [31:0] _mask_T_7 = _mask_T_6[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:119:{25,38}
  wire [30:0] _roundedInt_T_3 =
    shiftedFrac_3[31:1]
    + {30'h0,
       shiftedFrac_3[0]
         & ((shiftVal_3[5]
               ? (|(io_pir_frac_i[2'h3][27:0]))
               : ~_GEN_8
                 & (|(shiftVal_3[5] | _GEN_8
                        ? 28'h0
                        : _mask_T_7[31:4] & io_pir_frac_i[2'h3][27:0])))
            | shiftedFrac_3[1])};	// src/main/scala/qvu/PositQuantizeToInt8.scala:87:19, :92:16, :100:32, :101:16, :103:16, :109:33, :111:{20,29}, :112:19, :113:{14,28}, :115:19, :116:{22,31}, :117:16, :119:38, :120:{20,34}, :121:{16,30}, :126:26, :127:26, :129:{23,34}, :132:31, :136:30, :229:11
  wire        _GEN_9 =
    io_pir_frac_i[2'h3] == 33'h0 | $signed(io_pir_exp_i[2'h3]) < 8'sh1
    & (|io_pir_frac_i[2'h3]);	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :87:19, :88:{19,27,36}, :139:14, :229:11
  wire [30:0] _rawInts_3_T_3 = ~_roundedInt_T_3 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:136:30, :149:{22,42}
  wire [32:0] _GEN_10 =
    _GEN_9
      ? 33'h0
      : io_pir_sign_i[2'h3]
          ? {{2{_rawInts_3_T_3[30]}}, _rawInts_3_T_3}
          : {{2{_roundedInt_T_3[30]}}, _roundedInt_T_3};	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :92:23, :136:30, :139:{14,23}, :141:18, :143:30, :145:18, :149:{18,42}, :229:11
  wire [32:0] _centeredValue_T = _GEN_1 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :139:23, :141:18, :143:30, :245:38
  wire [33:0] _GEN_11 = {globalScale[32], globalScale};	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :250:42
  wire [33:0] scaledValue =
    (|globalScale)
      ? $signed({_centeredValue_T[32], _centeredValue_T}) / $signed(_GEN_11)
      : 34'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :248:{28,41}, :250:42
  wire [32:0] remainder = $signed(_centeredValue_T) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :253:37
  wire        _needRounding_T_6 = $signed(remainder) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :253:37, :257:37
  wire [32:0] _needRounding_T_7 = 33'h0 - remainder;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :75:16, :253:37, :257:37
  wire [32:0] _GEN_12 = {globalScale[32], globalScale[32:1]};	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :250:42, :254:43, :257:41
  wire        needRounding =
    $signed(_needRounding_T_6 ? _needRounding_T_7 : remainder) > $signed(_GEN_12)
    | (_needRounding_T_6 ? _needRounding_T_7 : remainder) == _GEN_12 & scaledValue[0];	// src/main/scala/qvu/PositQuantizeToInt8.scala:75:16, :248:28, :253:37, :257:{37,41,54}, :258:{37,41,56,71}
  wire [1:0]  _roundedValue_T_3 =
    $signed(remainder) > -33'sh1 ? {1'h0, needRounding} : {2{needRounding}};	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :31:14, :51:36, :253:37, :257:54, :261:43, :262:19, :263:12
  wire [33:0] _roundedValue_T_4 =
    scaledValue + {{32{_roundedValue_T_3[1]}}, _roundedValue_T_3};	// src/main/scala/qvu/PositQuantizeToInt8.scala:248:28, :261:{38,43}
  wire [32:0] _centeredValue_T_2 = _GEN_4 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :139:23, :141:18, :143:30, :245:38
  wire [33:0] scaledValue_1 =
    (|globalScale)
      ? $signed({_centeredValue_T_2[32], _centeredValue_T_2}) / $signed(_GEN_11)
      : 34'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :248:{28,41}, :250:42
  wire [32:0] remainder_1 = $signed(_centeredValue_T_2) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :253:37
  wire        _needRounding_T_21 = $signed(remainder_1) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :253:37, :257:37
  wire [32:0] _needRounding_T_22 = 33'h0 - remainder_1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :75:16, :253:37, :257:37
  wire        needRounding_1 =
    $signed(_needRounding_T_21 ? _needRounding_T_22 : remainder_1) > $signed(_GEN_12)
    | (_needRounding_T_21 ? _needRounding_T_22 : remainder_1) == _GEN_12
    & scaledValue_1[0];	// src/main/scala/qvu/PositQuantizeToInt8.scala:75:16, :248:28, :253:37, :257:{37,41,54}, :258:{37,41,56,71}
  wire [1:0]  _roundedValue_T_9 =
    $signed(remainder_1) > -33'sh1 ? {1'h0, needRounding_1} : {2{needRounding_1}};	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :31:14, :51:36, :253:37, :257:54, :261:43, :262:19, :263:12
  wire [33:0] _roundedValue_T_10 =
    scaledValue_1 + {{32{_roundedValue_T_9[1]}}, _roundedValue_T_9};	// src/main/scala/qvu/PositQuantizeToInt8.scala:248:28, :261:{38,43}
  wire [32:0] _centeredValue_T_4 = _GEN_7 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :139:23, :141:18, :143:30, :245:38
  wire [33:0] scaledValue_2 =
    (|globalScale)
      ? $signed({_centeredValue_T_4[32], _centeredValue_T_4}) / $signed(_GEN_11)
      : 34'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :248:{28,41}, :250:42
  wire [32:0] remainder_2 = $signed(_centeredValue_T_4) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :253:37
  wire        _needRounding_T_36 = $signed(remainder_2) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :253:37, :257:37
  wire [32:0] _needRounding_T_37 = 33'h0 - remainder_2;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :75:16, :253:37, :257:37
  wire        needRounding_2 =
    $signed(_needRounding_T_36 ? _needRounding_T_37 : remainder_2) > $signed(_GEN_12)
    | (_needRounding_T_36 ? _needRounding_T_37 : remainder_2) == _GEN_12
    & scaledValue_2[0];	// src/main/scala/qvu/PositQuantizeToInt8.scala:75:16, :248:28, :253:37, :257:{37,41,54}, :258:{37,41,56,71}
  wire [1:0]  _roundedValue_T_15 =
    $signed(remainder_2) > -33'sh1 ? {1'h0, needRounding_2} : {2{needRounding_2}};	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :31:14, :51:36, :253:37, :257:54, :261:43, :262:19, :263:12
  wire [33:0] _roundedValue_T_16 =
    scaledValue_2 + {{32{_roundedValue_T_15[1]}}, _roundedValue_T_15};	// src/main/scala/qvu/PositQuantizeToInt8.scala:248:28, :261:{38,43}
  wire [32:0] _centeredValue_T_6 = _GEN_10 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :139:23, :141:18, :143:30, :245:38
  wire [33:0] scaledValue_3 =
    (|globalScale)
      ? $signed({_centeredValue_T_6[32], _centeredValue_T_6}) / $signed(_GEN_11)
      : 34'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :248:{28,41}, :250:42
  wire [32:0] remainder_3 = $signed(_centeredValue_T_6) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :245:38, :253:37
  wire        _needRounding_T_51 = $signed(remainder_3) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :253:37, :257:37
  wire [32:0] _needRounding_T_52 = 33'h0 - remainder_3;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :75:16, :253:37, :257:37
  wire        needRounding_3 =
    $signed(_needRounding_T_51 ? _needRounding_T_52 : remainder_3) > $signed(_GEN_12)
    | (_needRounding_T_51 ? _needRounding_T_52 : remainder_3) == _GEN_12
    & scaledValue_3[0];	// src/main/scala/qvu/PositQuantizeToInt8.scala:75:16, :248:28, :253:37, :257:{37,41,54}, :258:{37,41,56,71}
  wire [1:0]  _roundedValue_T_21 =
    $signed(remainder_3) > -33'sh1 ? {1'h0, needRounding_3} : {2{needRounding_3}};	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :31:14, :51:36, :253:37, :257:54, :261:43, :262:19, :263:12
  wire [33:0] _roundedValue_T_22 =
    scaledValue_3 + {{32{_roundedValue_T_21[1]}}, _roundedValue_T_21};	// src/main/scala/qvu/PositQuantizeToInt8.scala:248:28, :261:{38,43}
  always @(posedge clock) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
    if (reset) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
      globalMax <= 33'h7F;	// src/main/scala/qvu/PositQuantizeToInt8.scala:49:34, :55:26
      globalMin <= 33'h1FFFFFF80;	// src/main/scala/qvu/PositQuantizeToInt8.scala:50:34, :56:26
      globalScale <= 33'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28
      globalOffset <= 33'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29
      batchMax <= 33'h1FFFFFF80;	// src/main/scala/qvu/PositQuantizeToInt8.scala:50:34, :61:25
      batchMin <= 33'h7F;	// src/main/scala/qvu/PositQuantizeToInt8.scala:49:34, :62:25
      batchHasData <= 1'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :31:14, :51:36, :63:29
      state <= 2'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :263:12
    end
    else begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7
      automatic logic [3:0][1:0] _GEN_13 = '{2'h0, 2'h3, 2'h2, 2'h1};	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :155:{15,26}, :160:11, :161:{22,36}, :179:11, :180:{22,35}, :229:11, :230:{22,37}, :232:11
      automatic logic            _GEN_14 = state == 2'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :155:15, :263:12
      automatic logic            _GEN_15;	// src/main/scala/qvu/PositQuantizeToInt8.scala:161:22
      automatic logic            _GEN_16 =
        ~_GEN_3 | ~_GEN_0 & ~batchHasData | batchHasData;	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :63:29, :112:30, :139:{14,23}, :142:22, :143:30, :164:29, :165:{15,30}, :168:24
      automatic logic            _GEN_17 = ~_GEN_6 & ~batchHasData;	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :63:29, :112:30, :139:{14,23}, :142:22, :143:30, :164:29, :165:{15,30}, :168:24
      automatic logic            _GEN_18 = state == 2'h2;	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :179:11, :180:22
      automatic logic            _GEN_19;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :155:26, :161:36, :180:35
      _GEN_15 = state == 2'h1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :149:42, :161:22
      _GEN_19 = _GEN_14 | _GEN_15;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :155:{15,26}, :161:{22,36}, :180:35
      if (_GEN_19
          | ~(_GEN_18 & batchHasData & $signed(batchMax) > $signed(globalMax))) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :61:25, :63:29, :155:26, :161:36, :180:{22,35}, :182:28, :192:32, :200:{22,35}, :201:19
      end
      else	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :155:26, :161:36, :180:35
        globalMax <= batchMax;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :61:25
      if (_GEN_19
          | ~(_GEN_18 & batchHasData & $signed(batchMin) < $signed(globalMin))) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :56:26, :62:25, :63:29, :155:26, :161:36, :180:{22,35}, :182:28, :192:32, :203:{22,35}, :204:19
      end
      else	// src/main/scala/qvu/PositQuantizeToInt8.scala:56:26, :155:26, :161:36, :180:35
        globalMin <= batchMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:56:26, :62:25
      if (_GEN_19 | ~(_GEN_18 & batchHasData)) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :57:28, :58:29, :63:29, :155:26, :161:36, :180:{22,35}, :182:28, :192:32, :209:28
      end
      else begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :155:26, :161:36, :180:35
        automatic logic [32:0] _range_T = globalMax - globalMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :56:26, :208:30
        automatic logic [32:0] _range_T_7 =
          $signed(_range_T) < 33'sh0 ? 33'h0 - _range_T : _range_T;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :75:16, :208:{30,43}
        automatic logic        _GEN_20 = _range_T_7 == 33'h0;	// src/main/scala/qvu/PositQuantizeToInt8.scala:58:29, :208:{43,47}, :209:19
        automatic logic        _GEN_21 = _range_T_7 < 33'h100;	// src/main/scala/qvu/PositQuantizeToInt8.scala:208:43, :213:26
        automatic logic [32:0] _mid_T = globalMax + globalMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :56:26, :217:30
        automatic logic [32:0] _mid_T_3 = globalMax + globalMin;	// src/main/scala/qvu/PositQuantizeToInt8.scala:55:26, :56:26, :225:30
        globalScale <= _GEN_20 | _GEN_21 ? 33'h1 : (_range_T_7 + 33'hFE) / 33'hFF;	// src/main/scala/qvu/PositQuantizeToInt8.scala:57:28, :208:{43,47}, :209:{19,28}, :211:21, :213:{26,36}, :215:21, :222:{21,31,40}
        globalOffset <=
          _GEN_20
            ? globalMin
            : _GEN_21 ? {_mid_T[32], _mid_T[32:1]} : {_mid_T_3[32], _mid_T_3[32:1]};	// src/main/scala/qvu/PositQuantizeToInt8.scala:56:26, :58:29, :208:47, :209:{19,28}, :212:22, :213:{26,36}, :217:{30,43}, :219:22, :225:{30,43}, :226:22
      end
      if (_GEN_14) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:155:15
        batchMax <= 33'h1FFFFFF80;	// src/main/scala/qvu/PositQuantizeToInt8.scala:50:34, :61:25
        batchMin <= 33'h7F;	// src/main/scala/qvu/PositQuantizeToInt8.scala:49:34, :62:25
      end
      else if (_GEN_15) begin	// src/main/scala/qvu/PositQuantizeToInt8.scala:161:22
        if (~_GEN_9 & (~batchHasData | $signed(_GEN_10) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :61:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :166:20, :170:{28,40}, :171:22
          batchMax <= _GEN_10;	// src/main/scala/qvu/PositQuantizeToInt8.scala:61:25, :139:23, :141:18, :143:30
        else if (~_GEN_6 & (~batchHasData | $signed(_GEN_7) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :61:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :166:20, :170:{28,40}, :171:22
          batchMax <= _GEN_7;	// src/main/scala/qvu/PositQuantizeToInt8.scala:61:25, :139:23, :141:18, :143:30
        else if (~_GEN_3 & (~batchHasData | $signed(_GEN_4) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :61:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :166:20, :170:{28,40}, :171:22
          batchMax <= _GEN_4;	// src/main/scala/qvu/PositQuantizeToInt8.scala:61:25, :139:23, :141:18, :143:30
        else if (~_GEN_0 & (~batchHasData | $signed(_GEN_1) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :61:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :166:20, :170:{28,40}, :171:22
          batchMax <= _GEN_1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:61:25, :139:23, :141:18, :143:30
        if (~_GEN_9 & (~batchHasData | $signed(_GEN_10) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :62:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :167:20, :173:{28,40}, :174:22
          batchMin <= _GEN_10;	// src/main/scala/qvu/PositQuantizeToInt8.scala:62:25, :139:23, :141:18, :143:30
        else if (~_GEN_6 & (~batchHasData | $signed(_GEN_7) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :62:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :167:20, :173:{28,40}, :174:22
          batchMin <= _GEN_7;	// src/main/scala/qvu/PositQuantizeToInt8.scala:62:25, :139:23, :141:18, :143:30
        else if (~_GEN_3 & (~batchHasData | $signed(_GEN_4) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :62:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :167:20, :173:{28,40}, :174:22
          batchMin <= _GEN_4;	// src/main/scala/qvu/PositQuantizeToInt8.scala:62:25, :139:23, :141:18, :143:30
        else if (~_GEN_0 & (~batchHasData | $signed(_GEN_1) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt8.scala:51:36, :62:25, :63:29, :112:30, :139:{14,23}, :141:18, :142:22, :143:30, :164:29, :165:{15,30}, :167:20, :173:{28,40}, :174:22
          batchMin <= _GEN_1;	// src/main/scala/qvu/PositQuantizeToInt8.scala:62:25, :139:23, :141:18, :143:30
      end
      batchHasData <=
        ~_GEN_14
        & (_GEN_15
             ? (_GEN_9 ? _GEN_17 | _GEN_16 : ~batchHasData | _GEN_17 | _GEN_16)
             : batchHasData);	// src/main/scala/qvu/PositQuantizeToInt8.scala:63:29, :139:14, :155:{15,26}, :159:18, :161:{22,36}, :164:29, :165:{15,30}, :168:24
      state <= _GEN_13[state];	// src/main/scala/qvu/PositQuantizeToInt8.scala:67:22, :155:{15,26}, :160:11, :161:{22,36}, :179:11, :180:{22,35}, :229:11, :230:{22,37}, :232:11
    end
  end // always @(posedge)
  assign io_int8_o =
    {{_GEN_9
        ? 8'h0
        : $signed(_roundedValue_T_22) > 34'sh7F
            ? 8'h7F
            : $signed(_roundedValue_T_22) < -34'sh80 ? 8'h80 : _roundedValue_T_22[7:0]},
     {_GEN_6
        ? 8'h0
        : $signed(_roundedValue_T_16) > 34'sh7F
            ? 8'h7F
            : $signed(_roundedValue_T_16) < -34'sh80 ? 8'h80 : _roundedValue_T_16[7:0]},
     {_GEN_3
        ? 8'h0
        : $signed(_roundedValue_T_10) > 34'sh7F
            ? 8'h7F
            : $signed(_roundedValue_T_10) < -34'sh80 ? 8'h80 : _roundedValue_T_10[7:0]},
     {_GEN_0
        ? 8'h0
        : $signed(_roundedValue_T_4) > 34'sh7F
            ? 8'h7F
            : $signed(_roundedValue_T_4) < -34'sh80 ? 8'h80 : _roundedValue_T_4[7:0]}};	// src/main/scala/qvu/PositQuantizeToInt8.scala:17:7, :139:14, :238:34, :240:27, :261:38, :268:{26,35}, :269:21, :270:{33,43}, :271:21, :273:{21,36}
endmodule

// external module verilator_directives

module PositQuantizeToInt4(	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
  input              clock,	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
                     reset,	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
  input  [3:0]       io_pir_sign_i,	// src/main/scala/qvu/PositQuantizeToInt4.scala:44:14
  input  [3:0][7:0]  io_pir_exp_i,	// src/main/scala/qvu/PositQuantizeToInt4.scala:44:14
  input  [3:0][32:0] io_pir_frac_i,	// src/main/scala/qvu/PositQuantizeToInt4.scala:44:14
  output [3:0][3:0]  io_int4_o	// src/main/scala/qvu/PositQuantizeToInt4.scala:44:14
);

  reg  [32:0]      globalMax;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26
  reg  [32:0]      globalMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:74:26
  reg  [32:0]      globalScale;	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28
  reg  [32:0]      globalOffset;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29
  reg  [32:0]      batchMax;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25
  reg  [32:0]      batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25
  reg              batchHasData;	// src/main/scala/qvu/PositQuantizeToInt4.scala:81:29
  reg  [1:0]       state;	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22
  reg  [7:0][15:0] histogram;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26
  reg  [19:0]      histogramTotal;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31
  wire [7:0]       _shiftVal_tmp_T = 8'h1E - io_pir_exp_i[2'h0];	// src/main/scala/qvu/PositQuantizeToInt4.scala:110:19, :118:26, :397:38
  wire [5:0]       shiftVal =
    $signed(_shiftVal_tmp_T) > -8'sh1 ? _shiftVal_tmp_T[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:118:26, :122:{24,32}, :123:{16,31}, :125:16
  wire [31:0]      shiftedFrac =
    shiftVal[5]
      ? {32{io_pir_sign_i[2'h0]}}
      : {io_pir_frac_i[2'h0][27:0], 4'h0} >> shiftVal;	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:{16,23}, :122:32, :123:16, :125:16, :133:{20,29}, :134:{19,25}, :137:{19,33}, :345:34, :397:38
  wire             _GEN = shiftVal == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :138:22
  wire [63:0]      _mask_T = 64'h1 << shiftVal;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :141:25
  wire [31:0]      _mask_T_1 = _mask_T[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:141:{25,38}
  wire [30:0]      _roundedInt_T =
    shiftedFrac[31:1]
    + {30'h0,
       shiftedFrac[0]
         & ((shiftVal[5]
               ? (|(io_pir_frac_i[2'h0][27:0]))
               : ~_GEN
                 & (|(shiftVal[5] | _GEN
                        ? 28'h0
                        : _mask_T_1[31:4] & io_pir_frac_i[2'h0][27:0])))
            | shiftedFrac[1])};	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:16, :122:32, :123:16, :125:16, :131:33, :133:{20,29}, :134:19, :135:{14,28}, :137:19, :138:{22,31}, :139:16, :141:38, :142:{20,34}, :143:{16,30}, :148:26, :149:26, :151:{23,34}, :154:31, :158:30, :397:38
  wire             _GEN_0 =
    io_pir_frac_i[2'h0] == 33'h0 | $signed(io_pir_exp_i[2'h0]) < 8'sh1
    & (|io_pir_frac_i[2'h0]);	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :109:19, :110:{19,27,36}, :161:14, :397:38
  wire [30:0]      _rawInts_0_T_3 = ~_roundedInt_T + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:158:30, :171:{22,42}
  wire [32:0]      _GEN_1 =
    _GEN_0
      ? 33'h0
      : io_pir_sign_i[2'h0]
          ? {{2{_rawInts_0_T_3[30]}}, _rawInts_0_T_3}
          : {{2{_roundedInt_T[30]}}, _roundedInt_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :114:23, :158:30, :161:{14,23}, :163:18, :165:30, :167:18, :171:{18,42}, :397:38
  wire [7:0]       _shiftVal_tmp_T_3 = 8'h1E - io_pir_exp_i[2'h1];	// src/main/scala/qvu/PositQuantizeToInt4.scala:110:19, :118:26, :171:42
  wire [5:0]       shiftVal_1 =
    $signed(_shiftVal_tmp_T_3) > -8'sh1 ? _shiftVal_tmp_T_3[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:118:26, :122:{24,32}, :123:{16,31}, :125:16
  wire [31:0]      shiftedFrac_1 =
    shiftVal_1[5]
      ? {32{io_pir_sign_i[2'h1]}}
      : {io_pir_frac_i[2'h1][27:0], 4'h0} >> shiftVal_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:{16,23}, :122:32, :123:16, :125:16, :133:{20,29}, :134:{19,25}, :137:{19,33}, :171:42, :345:34
  wire             _GEN_2 = shiftVal_1 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :138:22
  wire [63:0]      _mask_T_2 = 64'h1 << shiftVal_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :141:25
  wire [31:0]      _mask_T_3 = _mask_T_2[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:141:{25,38}
  wire [30:0]      _roundedInt_T_1 =
    shiftedFrac_1[31:1]
    + {30'h0,
       shiftedFrac_1[0]
         & ((shiftVal_1[5]
               ? (|(io_pir_frac_i[2'h1][27:0]))
               : ~_GEN_2
                 & (|(shiftVal_1[5] | _GEN_2
                        ? 28'h0
                        : _mask_T_3[31:4] & io_pir_frac_i[2'h1][27:0])))
            | shiftedFrac_1[1])};	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:16, :122:32, :123:16, :125:16, :131:33, :133:{20,29}, :134:19, :135:{14,28}, :137:19, :138:{22,31}, :139:16, :141:38, :142:{20,34}, :143:{16,30}, :148:26, :149:26, :151:{23,34}, :154:31, :158:30, :171:42
  wire             _GEN_3 =
    io_pir_frac_i[2'h1] == 33'h0 | $signed(io_pir_exp_i[2'h1]) < 8'sh1
    & (|io_pir_frac_i[2'h1]);	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :109:19, :110:{19,27,36}, :161:14, :171:42
  wire [30:0]      _rawInts_1_T_3 = ~_roundedInt_T_1 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:158:30, :171:{22,42}
  wire [32:0]      _GEN_4 =
    _GEN_3
      ? 33'h0
      : io_pir_sign_i[2'h1]
          ? {{2{_rawInts_1_T_3[30]}}, _rawInts_1_T_3}
          : {{2{_roundedInt_T_1[30]}}, _roundedInt_T_1};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :114:23, :158:30, :161:{14,23}, :163:18, :165:30, :167:18, :171:{18,42}
  wire [7:0]       _shiftVal_tmp_T_6 = 8'h1E - io_pir_exp_i[2'h2];	// src/main/scala/qvu/PositQuantizeToInt4.scala:110:19, :118:26, :230:11
  wire [5:0]       shiftVal_2 =
    $signed(_shiftVal_tmp_T_6) > -8'sh1 ? _shiftVal_tmp_T_6[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:118:26, :122:{24,32}, :123:{16,31}, :125:16
  wire [31:0]      shiftedFrac_2 =
    shiftVal_2[5]
      ? {32{io_pir_sign_i[2'h2]}}
      : {io_pir_frac_i[2'h2][27:0], 4'h0} >> shiftVal_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:{16,23}, :122:32, :123:16, :125:16, :133:{20,29}, :134:{19,25}, :137:{19,33}, :230:11, :345:34
  wire             _GEN_5 = shiftVal_2 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :138:22
  wire [63:0]      _mask_T_4 = 64'h1 << shiftVal_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :141:25
  wire [31:0]      _mask_T_5 = _mask_T_4[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:141:{25,38}
  wire [30:0]      _roundedInt_T_2 =
    shiftedFrac_2[31:1]
    + {30'h0,
       shiftedFrac_2[0]
         & ((shiftVal_2[5]
               ? (|(io_pir_frac_i[2'h2][27:0]))
               : ~_GEN_5
                 & (|(shiftVal_2[5] | _GEN_5
                        ? 28'h0
                        : _mask_T_5[31:4] & io_pir_frac_i[2'h2][27:0])))
            | shiftedFrac_2[1])};	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:16, :122:32, :123:16, :125:16, :131:33, :133:{20,29}, :134:19, :135:{14,28}, :137:19, :138:{22,31}, :139:16, :141:38, :142:{20,34}, :143:{16,30}, :148:26, :149:26, :151:{23,34}, :154:31, :158:30, :230:11
  wire             _GEN_6 =
    io_pir_frac_i[2'h2] == 33'h0 | $signed(io_pir_exp_i[2'h2]) < 8'sh1
    & (|io_pir_frac_i[2'h2]);	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :109:19, :110:{19,27,36}, :161:14, :230:11
  wire [30:0]      _rawInts_2_T_3 = ~_roundedInt_T_2 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:158:30, :171:{22,42}
  wire [32:0]      _GEN_7 =
    _GEN_6
      ? 33'h0
      : io_pir_sign_i[2'h2]
          ? {{2{_rawInts_2_T_3[30]}}, _rawInts_2_T_3}
          : {{2{_roundedInt_T_2[30]}}, _roundedInt_T_2};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :114:23, :158:30, :161:{14,23}, :163:18, :165:30, :167:18, :171:{18,42}, :230:11
  wire [7:0]       _shiftVal_tmp_T_9 = 8'h1E - io_pir_exp_i[2'h3];	// src/main/scala/qvu/PositQuantizeToInt4.scala:110:19, :118:26, :336:11
  wire [5:0]       shiftVal_3 =
    $signed(_shiftVal_tmp_T_9) > -8'sh1 ? _shiftVal_tmp_T_9[5:0] : 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:118:26, :122:{24,32}, :123:{16,31}, :125:16
  wire [31:0]      shiftedFrac_3 =
    shiftVal_3[5]
      ? {32{io_pir_sign_i[2'h3]}}
      : {io_pir_frac_i[2'h3][27:0], 4'h0} >> shiftVal_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:{16,23}, :122:32, :123:16, :125:16, :133:{20,29}, :134:{19,25}, :137:{19,33}, :336:11, :345:34
  wire             _GEN_8 = shiftVal_3 == 6'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :138:22
  wire [63:0]      _mask_T_6 = 64'h1 << shiftVal_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:122:32, :123:16, :125:16, :141:25
  wire [31:0]      _mask_T_7 = _mask_T_6[31:0] - 32'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:141:{25,38}
  wire [30:0]      _roundedInt_T_3 =
    shiftedFrac_3[31:1]
    + {30'h0,
       shiftedFrac_3[0]
         & ((shiftVal_3[5]
               ? (|(io_pir_frac_i[2'h3][27:0]))
               : ~_GEN_8
                 & (|(shiftVal_3[5] | _GEN_8
                        ? 28'h0
                        : _mask_T_7[31:4] & io_pir_frac_i[2'h3][27:0])))
            | shiftedFrac_3[1])};	// src/main/scala/qvu/PositQuantizeToInt4.scala:109:19, :114:16, :122:32, :123:16, :125:16, :131:33, :133:{20,29}, :134:19, :135:{14,28}, :137:19, :138:{22,31}, :139:16, :141:38, :142:{20,34}, :143:{16,30}, :148:26, :149:26, :151:{23,34}, :154:31, :158:30, :336:11
  wire             _GEN_9 =
    io_pir_frac_i[2'h3] == 33'h0 | $signed(io_pir_exp_i[2'h3]) < 8'sh1
    & (|io_pir_frac_i[2'h3]);	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :109:19, :110:{19,27,36}, :161:14, :336:11
  wire [30:0]      _rawInts_3_T_3 = ~_roundedInt_T_3 + 31'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:158:30, :171:{22,42}
  wire [32:0]      _GEN_10 =
    _GEN_9
      ? 33'h0
      : io_pir_sign_i[2'h3]
          ? {{2{_rawInts_3_T_3[30]}}, _rawInts_3_T_3}
          : {{2{_roundedInt_T_3[30]}}, _roundedInt_T_3};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :114:23, :158:30, :161:{14,23}, :163:18, :165:30, :167:18, :171:{18,42}, :336:11
  wire [32:0]      _centeredValue_T = _GEN_1 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :161:23, :163:18, :165:30, :351:38
  wire             _GEN_11 = globalScale == 33'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :76:29, :356:25
  wire [33:0]      _GEN_12 = {globalScale[32], globalScale};	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :333:43, :360:41
  wire [33:0]      scaledValue =
    $signed({_centeredValue_T[32], _centeredValue_T}) / $signed(_GEN_12);	// src/main/scala/qvu/PositQuantizeToInt4.scala:351:38, :360:41
  wire [32:0]      remainder =
    $signed($signed(_centeredValue_T) < 33'sh0
              ? 33'h0 - _centeredValue_T
              : _centeredValue_T) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :76:29, :97:16, :351:38, :363:{39,43}
  wire [33:0]      _tempIdx_T = scaledValue + 34'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:60, :360:41, :373:39
  wire [33:0]      tempIdx =
    ($signed(_tempIdx_T) < 34'sh0 ? 34'h0 - _tempIdx_T : _tempIdx_T) / 34'h2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :212:49, :373:{39,51,62}
  wire             _needRounding_T_9 = $signed(remainder) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :387:39
  wire [32:0]      _needRounding_T_10 = 33'h0 - remainder;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :387:39
  wire [32:0]      _needRounding_T_5 = _needRounding_T_9 ? _needRounding_T_10 : remainder;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39
  wire [35:0]      _GEN_13 = {{4{globalScale[32]}}, globalScale[32:1]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :333:43, :364:45, :387:56
  wire [35:0]      _needRounding_T_6 = _GEN_13 * 36'h6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:387:56
  wire [32:0]      _needRounding_T_13 =
    _needRounding_T_9 ? _needRounding_T_10 : remainder;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39, :388:39
  wire [36:0]      _GEN_14 = {{3{globalScale[32]}}, globalScale[32:1], 2'h0};	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :333:43, :364:45, :388:62, :397:38
  wire             _needRounding_T_24 = $signed(remainder) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :391:37
  wire [32:0]      _needRounding_T_25 = 33'h0 - remainder;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :391:37
  wire [32:0]      _GEN_15 = {globalScale[32], globalScale[32:1]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :333:43, :364:45, :391:41
  wire             needRounding =
    (|histogramTotal)
      ? ({4'h0, histogram[tempIdx < 34'h8 ? tempIdx[2:0] : 3'h7]} > histogramTotal / 20'h8
           ? $signed({{4{_needRounding_T_5[32]}},
                      _needRounding_T_5}) > $signed({_needRounding_T_6[35],
                                                     _needRounding_T_6}) / 37'sh5
           : $signed({{4{_needRounding_T_13[32]}}, _needRounding_T_13}) > $signed(_GEN_14)
             / 37'sh5)
      : $signed(_needRounding_T_24 ? _needRounding_T_25 : remainder) > $signed(_GEN_15)
        | (_needRounding_T_24 ? _needRounding_T_25 : remainder) == _GEN_15
        & scaledValue[0];	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :89:31, :97:16, :177:26, :212:60, :259:28, :345:34, :360:41, :363:43, :370:37, :373:62, :376:36, :377:{25,40}, :378:{21,31}, :383:40, :386:{24,30,39}, :387:{39,43,56,62}, :388:{39,43,62}, :391:{24,37,41,53}, :392:{38,42,57,72}
  wire [1:0]       roundingDirection =
    $signed(_centeredValue_T) > -33'sh1 ? {1'h0, needRounding} : {2{needRounding}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :44:14, :69:36, :351:38, :370:37, :386:24, :391:24, :396:{36,51}, :397:38
  wire [32:0]      quantizedValue =
    _GEN_11 ? 33'h0 : scaledValue[32:0] + {{31{roundingDirection[1]}}, roundingDirection};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :356:{25,34}, :357:24, :360:41, :396:36, :400:{24,39}
  wire [32:0]      _centeredValue_T_2 = _GEN_4 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :161:23, :163:18, :165:30, :351:38
  wire [33:0]      scaledValue_1 =
    $signed({_centeredValue_T_2[32], _centeredValue_T_2}) / $signed(_GEN_12);	// src/main/scala/qvu/PositQuantizeToInt4.scala:351:38, :360:41
  wire [32:0]      remainder_1 =
    $signed($signed(_centeredValue_T_2) < 33'sh0
              ? 33'h0 - _centeredValue_T_2
              : _centeredValue_T_2) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :76:29, :97:16, :351:38, :363:{39,43}
  wire [33:0]      _tempIdx_T_9 = scaledValue_1 + 34'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:60, :360:41, :373:39
  wire [33:0]      tempIdx_1 =
    ($signed(_tempIdx_T_9) < 34'sh0 ? 34'h0 - _tempIdx_T_9 : _tempIdx_T_9) / 34'h2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :212:49, :373:{39,51,62}
  wire             _needRounding_T_43 = $signed(remainder_1) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :387:39
  wire [32:0]      _needRounding_T_44 = 33'h0 - remainder_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :387:39
  wire [32:0]      _needRounding_T_39 =
    _needRounding_T_43 ? _needRounding_T_44 : remainder_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39
  wire [35:0]      _needRounding_T_40 = _GEN_13 * 36'h6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:387:56
  wire [32:0]      _needRounding_T_47 =
    _needRounding_T_43 ? _needRounding_T_44 : remainder_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39, :388:39
  wire             _needRounding_T_58 = $signed(remainder_1) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :391:37
  wire [32:0]      _needRounding_T_59 = 33'h0 - remainder_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :391:37
  wire             needRounding_1 =
    (|histogramTotal)
      ? ({4'h0, histogram[tempIdx_1 < 34'h8 ? tempIdx_1[2:0] : 3'h7]} > histogramTotal
         / 20'h8
           ? $signed({{4{_needRounding_T_39[32]}},
                      _needRounding_T_39}) > $signed({_needRounding_T_40[35],
                                                      _needRounding_T_40}) / 37'sh5
           : $signed({{4{_needRounding_T_47[32]}}, _needRounding_T_47}) > $signed(_GEN_14)
             / 37'sh5)
      : $signed(_needRounding_T_58 ? _needRounding_T_59 : remainder_1) > $signed(_GEN_15)
        | (_needRounding_T_58 ? _needRounding_T_59 : remainder_1) == _GEN_15
        & scaledValue_1[0];	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :89:31, :97:16, :177:26, :212:60, :259:28, :345:34, :360:41, :363:43, :370:37, :373:62, :376:36, :377:{25,40}, :378:{21,31}, :383:40, :386:{24,30,39}, :387:{39,43,56,62}, :388:{39,43,62}, :391:{24,37,41,53}, :392:{38,42,57,72}
  wire [1:0]       roundingDirection_1 =
    $signed(_centeredValue_T_2) > -33'sh1 ? {1'h0, needRounding_1} : {2{needRounding_1}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :44:14, :69:36, :351:38, :370:37, :386:24, :391:24, :396:{36,51}, :397:38
  wire [32:0]      quantizedValue_1 =
    _GEN_11
      ? 33'h0
      : scaledValue_1[32:0] + {{31{roundingDirection_1[1]}}, roundingDirection_1};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :356:{25,34}, :357:24, :360:41, :396:36, :400:{24,39}
  wire [32:0]      _centeredValue_T_4 = _GEN_7 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :161:23, :163:18, :165:30, :351:38
  wire [33:0]      scaledValue_2 =
    $signed({_centeredValue_T_4[32], _centeredValue_T_4}) / $signed(_GEN_12);	// src/main/scala/qvu/PositQuantizeToInt4.scala:351:38, :360:41
  wire [32:0]      remainder_2 =
    $signed($signed(_centeredValue_T_4) < 33'sh0
              ? 33'h0 - _centeredValue_T_4
              : _centeredValue_T_4) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :76:29, :97:16, :351:38, :363:{39,43}
  wire [33:0]      _tempIdx_T_18 = scaledValue_2 + 34'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:60, :360:41, :373:39
  wire [33:0]      tempIdx_2 =
    ($signed(_tempIdx_T_18) < 34'sh0 ? 34'h0 - _tempIdx_T_18 : _tempIdx_T_18) / 34'h2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :212:49, :373:{39,51,62}
  wire             _needRounding_T_77 = $signed(remainder_2) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :387:39
  wire [32:0]      _needRounding_T_78 = 33'h0 - remainder_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :387:39
  wire [32:0]      _needRounding_T_73 =
    _needRounding_T_77 ? _needRounding_T_78 : remainder_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39
  wire [35:0]      _needRounding_T_74 = _GEN_13 * 36'h6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:387:56
  wire [32:0]      _needRounding_T_81 =
    _needRounding_T_77 ? _needRounding_T_78 : remainder_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39, :388:39
  wire             _needRounding_T_92 = $signed(remainder_2) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :391:37
  wire [32:0]      _needRounding_T_93 = 33'h0 - remainder_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :391:37
  wire             needRounding_2 =
    (|histogramTotal)
      ? ({4'h0, histogram[tempIdx_2 < 34'h8 ? tempIdx_2[2:0] : 3'h7]} > histogramTotal
         / 20'h8
           ? $signed({{4{_needRounding_T_73[32]}},
                      _needRounding_T_73}) > $signed({_needRounding_T_74[35],
                                                      _needRounding_T_74}) / 37'sh5
           : $signed({{4{_needRounding_T_81[32]}}, _needRounding_T_81}) > $signed(_GEN_14)
             / 37'sh5)
      : $signed(_needRounding_T_92 ? _needRounding_T_93 : remainder_2) > $signed(_GEN_15)
        | (_needRounding_T_92 ? _needRounding_T_93 : remainder_2) == _GEN_15
        & scaledValue_2[0];	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :89:31, :97:16, :177:26, :212:60, :259:28, :345:34, :360:41, :363:43, :370:37, :373:62, :376:36, :377:{25,40}, :378:{21,31}, :383:40, :386:{24,30,39}, :387:{39,43,56,62}, :388:{39,43,62}, :391:{24,37,41,53}, :392:{38,42,57,72}
  wire [1:0]       roundingDirection_2 =
    $signed(_centeredValue_T_4) > -33'sh1 ? {1'h0, needRounding_2} : {2{needRounding_2}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :44:14, :69:36, :351:38, :370:37, :386:24, :391:24, :396:{36,51}, :397:38
  wire [32:0]      quantizedValue_2 =
    _GEN_11
      ? 33'h0
      : scaledValue_2[32:0] + {{31{roundingDirection_2[1]}}, roundingDirection_2};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :356:{25,34}, :357:24, :360:41, :396:36, :400:{24,39}
  wire [32:0]      _centeredValue_T_6 = _GEN_10 - globalOffset;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :161:23, :163:18, :165:30, :351:38
  wire [33:0]      scaledValue_3 =
    $signed({_centeredValue_T_6[32], _centeredValue_T_6}) / $signed(_GEN_12);	// src/main/scala/qvu/PositQuantizeToInt4.scala:351:38, :360:41
  wire [32:0]      remainder_3 =
    $signed($signed(_centeredValue_T_6) < 33'sh0
              ? 33'h0 - _centeredValue_T_6
              : _centeredValue_T_6) % $signed(globalScale);	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :76:29, :97:16, :351:38, :363:{39,43}
  wire [33:0]      _tempIdx_T_27 = scaledValue_3 + 34'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:60, :360:41, :373:39
  wire [33:0]      tempIdx_3 =
    ($signed(_tempIdx_T_27) < 34'sh0 ? 34'h0 - _tempIdx_T_27 : _tempIdx_T_27) / 34'h2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :212:49, :373:{39,51,62}
  wire             _needRounding_T_111 = $signed(remainder_3) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :387:39
  wire [32:0]      _needRounding_T_112 = 33'h0 - remainder_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :387:39
  wire [32:0]      _needRounding_T_107 =
    _needRounding_T_111 ? _needRounding_T_112 : remainder_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39
  wire [35:0]      _needRounding_T_108 = _GEN_13 * 36'h6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:387:56
  wire [32:0]      _needRounding_T_115 =
    _needRounding_T_111 ? _needRounding_T_112 : remainder_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:97:16, :363:43, :387:39, :388:39
  wire             _needRounding_T_126 = $signed(remainder_3) < 33'sh0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :363:43, :391:37
  wire [32:0]      _needRounding_T_127 = 33'h0 - remainder_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :363:43, :391:37
  wire             needRounding_3 =
    (|histogramTotal)
      ? ({4'h0, histogram[tempIdx_3 < 34'h8 ? tempIdx_3[2:0] : 3'h7]} > histogramTotal
         / 20'h8
           ? $signed({{4{_needRounding_T_107[32]}},
                      _needRounding_T_107}) > $signed({_needRounding_T_108[35],
                                                       _needRounding_T_108}) / 37'sh5
           : $signed({{4{_needRounding_T_115[32]}},
                      _needRounding_T_115}) > $signed(_GEN_14) / 37'sh5)
      : $signed(_needRounding_T_126
                  ? _needRounding_T_127
                  : remainder_3) > $signed(_GEN_15)
        | (_needRounding_T_126 ? _needRounding_T_127 : remainder_3) == _GEN_15
        & scaledValue_3[0];	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :89:31, :97:16, :177:26, :212:60, :259:28, :345:34, :360:41, :363:43, :370:37, :373:62, :376:36, :377:{25,40}, :378:{21,31}, :383:40, :386:{24,30,39}, :387:{39,43,56,62}, :388:{39,43,62}, :391:{24,37,41,53}, :392:{38,42,57,72}
  wire [1:0]       roundingDirection_3 =
    $signed(_centeredValue_T_6) > -33'sh1 ? {1'h0, needRounding_3} : {2{needRounding_3}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :44:14, :69:36, :351:38, :370:37, :386:24, :391:24, :396:{36,51}, :397:38
  wire [32:0]      quantizedValue_3 =
    _GEN_11
      ? 33'h0
      : scaledValue_3[32:0] + {{31{roundingDirection_3[1]}}, roundingDirection_3};	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :356:{25,34}, :357:24, :360:41, :396:36, :400:{24,39}
  always @(posedge clock) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
    if (reset) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
      globalMax <= 33'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:67:34, :73:26
      globalMin <= 33'h1FFFFFFF8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:68:34, :74:26
      globalScale <= 33'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28
      globalOffset <= 33'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29
      batchMax <= 33'h1FFFFFFF8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:68:34, :79:25
      batchMin <= 33'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:67:34, :80:25
      batchHasData <= 1'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :44:14, :69:36, :81:29
      state <= 2'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :397:38
      histogram <= '{16'h0, 16'h0, 16'h0, 16'h0, 16'h0, 16'h0, 16'h0, 16'h0};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:{26,34}
      histogramTotal <= 20'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31
    end
    else begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7
      automatic logic [3:0][1:0] _GEN_16 = '{2'h0, 2'h3, 2'h2, 2'h1};	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :177:{15,26}, :191:11, :192:{22,36}, :230:11, :231:{22,35}, :336:11, :337:{22,37}, :339:11
      automatic logic            _GEN_17 = state == 2'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :177:15, :397:38
      automatic logic            _GEN_18;	// src/main/scala/qvu/PositQuantizeToInt4.scala:192:22
      automatic logic            _GEN_19 =
        ~_GEN_3 | ~_GEN_0 & ~batchHasData | batchHasData;	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :81:29, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :196:{15,30}, :199:24
      automatic logic            _GEN_20 = ~_GEN_6 & ~batchHasData;	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :81:29, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :196:{15,30}, :199:24
      automatic logic            _GEN_21 = state == 2'h2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :230:11, :231:22
      automatic logic [19:0]     _cdf_1_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [19:0]     _cdf_2_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [19:0]     _cdf_3_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [19:0]     _cdf_4_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [19:0]     _cdf_5_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [19:0]     _cdf_6_T;	// src/main/scala/qvu/PositQuantizeToInt4.scala:264:30
      automatic logic [22:0]     _GEN_22 = {3'h0, histogramTotal};	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31, :177:26, :268:46
      automatic logic [22:0]     lowerThreshold = _GEN_22 * 23'h5 / 23'h64;	// src/main/scala/qvu/PositQuantizeToInt4.scala:268:{46,53}
      automatic logic [22:0]     _upperThreshold_T = _GEN_22 - lowerThreshold;	// src/main/scala/qvu/PositQuantizeToInt4.scala:268:{46,53}, :269:45
      automatic logic [22:0]     _GEN_23;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:26
      automatic logic [22:0]     _GEN_24;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_25;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_26;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_27;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_28;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_29;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [22:0]     _GEN_30;	// src/main/scala/qvu/PositQuantizeToInt4.scala:290:55
      automatic logic [32:0]     _dataRange_T = batchMax - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :297:35
      automatic logic [32:0]     binWidth_4 =
        (($signed(_dataRange_T) < 33'sh0 ? 33'h0 - _dataRange_T : _dataRange_T) + 33'h8)
        / 33'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:75, :297:{35,47}, :298:{35,50}
      automatic logic [32:0]     effectiveMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:256:20, :259:35, :301:22
      automatic logic [32:0]     effectiveMax;	// src/main/scala/qvu/PositQuantizeToInt4.scala:255:20, :259:35, :302:22
      automatic logic            _GEN_31;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :177:26, :192:36, :231:35
      _GEN_18 = state == 2'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :171:42, :192:22
      _cdf_1_T = {4'h0, histogram[3'h0]} + {4'h0, histogram[3'h1]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _cdf_2_T = _cdf_1_T + {4'h0, histogram[3'h2]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _cdf_3_T = _cdf_2_T + {4'h0, histogram[3'h3]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _cdf_4_T = _cdf_3_T + {4'h0, histogram[3'h4]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _cdf_5_T = _cdf_4_T + {4'h0, histogram[3'h5]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _cdf_6_T = _cdf_5_T + {4'h0, histogram[3'h6]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :345:34
      _GEN_23 = {7'h0, histogram[3'h0]};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :290:26
      _GEN_24 = {3'h0, _cdf_1_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_25 = {3'h0, _cdf_2_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_26 = {3'h0, _cdf_3_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_27 = {3'h0, _cdf_4_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_28 = {3'h0, _cdf_5_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_29 = {3'h0, _cdf_6_T};	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :264:30, :290:55
      _GEN_30 = {3'h0, _cdf_6_T + {4'h0, histogram[3'h7]}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :264:30, :290:55, :345:34
      effectiveMin =
        (|histogramTotal)
          ? batchMin
            + {30'h0,
               _GEN_30 > lowerThreshold & _GEN_29 <= lowerThreshold
                 ? 3'h7
                 : _GEN_29 > lowerThreshold & _GEN_28 <= lowerThreshold
                     ? 3'h6
                     : _GEN_28 > lowerThreshold & _GEN_27 <= lowerThreshold
                         ? 3'h5
                         : _GEN_27 > lowerThreshold & _GEN_26 <= lowerThreshold
                             ? 3'h4
                             : _GEN_26 > lowerThreshold & _GEN_25 <= lowerThreshold
                                 ? 3'h3
                                 : _GEN_25 > lowerThreshold & _GEN_24 <= lowerThreshold
                                     ? 3'h2
                                     : {2'h0,
                                        _GEN_24 > lowerThreshold
                                          & _GEN_23 <= lowerThreshold}} * binWidth_4
          : batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :89:31, :158:30, :177:26, :256:20, :259:{28,35}, :268:53, :279:44, :283:{26,43,55,74}, :284:24, :290:{26,55}, :298:50, :301:{22,34,66}, :397:38
      effectiveMax =
        (|histogramTotal)
          ? batchMin
            + {30'h0,
               _GEN_29 < _upperThreshold_T & _GEN_30 >= _upperThreshold_T
                 ? 3'h6
                 : _GEN_28 < _upperThreshold_T & _GEN_29 >= _upperThreshold_T
                     ? 3'h5
                     : _GEN_27 < _upperThreshold_T & _GEN_28 >= _upperThreshold_T
                         ? 3'h4
                         : _GEN_26 < _upperThreshold_T & _GEN_27 >= _upperThreshold_T
                             ? 3'h3
                             : _GEN_25 < _upperThreshold_T & _GEN_26 >= _upperThreshold_T
                                 ? 3'h2
                                 : _GEN_24 < _upperThreshold_T
                                   & _GEN_25 >= _upperThreshold_T
                                     ? 3'h1
                                     : _GEN_23 < _upperThreshold_T
                                       & _GEN_24 >= _upperThreshold_T
                                         ? 3'h0
                                         : 3'h7} * binWidth_4
          : batchMax;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :89:31, :158:30, :177:26, :255:20, :259:{28,35}, :269:45, :273:35, :290:{26,43,55,74}, :291:24, :298:50, :302:{22,34,66}
      _GEN_31 = _GEN_17 | _GEN_18;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :177:{15,26}, :192:{22,36}, :231:35
      if (_GEN_31
          | ~(_GEN_21 & batchHasData & $signed(effectiveMax) > $signed(globalMax))) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :81:29, :177:26, :192:36, :231:{22,35}, :233:28, :243:32, :255:20, :259:35, :302:22, :306:{26,39}, :307:19
      end
      else	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :177:26, :192:36, :231:35
        globalMax <= effectiveMax;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :255:20, :259:35, :302:22
      if (_GEN_31
          | ~(_GEN_21 & batchHasData & $signed(effectiveMin) < $signed(globalMin))) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :74:26, :81:29, :177:26, :192:36, :231:{22,35}, :233:28, :243:32, :256:20, :259:35, :301:22, :309:{26,39}, :310:19
      end
      else	// src/main/scala/qvu/PositQuantizeToInt4.scala:74:26, :177:26, :192:36, :231:35
        globalMin <= effectiveMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:74:26, :256:20, :259:35, :301:22
      if (_GEN_31 | ~(_GEN_21 & batchHasData)) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :75:28, :76:29, :81:29, :177:26, :192:36, :231:{22,35}, :233:28, :243:32, :316:32
      end
      else begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :177:26, :192:36, :231:35
        automatic logic [32:0] _dataRange_T_8 = globalMax - globalMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :74:26, :314:34
        automatic logic [32:0] _dataRange_T_15 =
          $signed(_dataRange_T_8) < 33'sh0 ? 33'h0 - _dataRange_T_8 : _dataRange_T_8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :314:{34,47}
        automatic logic        _GEN_32 = _dataRange_T_15 == 33'h0;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :314:{47,51}, :316:23
        automatic logic [32:0] _mid_T = globalMax + globalMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:73:26, :74:26, :329:30
        globalScale <= _GEN_32 ? 33'h1 : (_dataRange_T_15 + 33'hE) / 33'hF;	// src/main/scala/qvu/PositQuantizeToInt4.scala:75:28, :314:{47,51}, :316:{23,32}, :318:21, :326:{21,49,56}
        globalOffset <=
          _GEN_32 ? globalMin : {_mid_T[32], _mid_T[32:1]} - globalScale * 33'h1FFFFFFFF;	// src/main/scala/qvu/PositQuantizeToInt4.scala:74:26, :75:28, :76:29, :314:51, :316:{23,32}, :319:22, :329:{30,43}, :333:{22,29,43}, :396:51
      end
      if (_GEN_17) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:15
        batchMax <= 33'h1FFFFFFF8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:68:34, :79:25
        batchMin <= 33'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:67:34, :80:25
      end
      else if (_GEN_18) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:192:22
        if (~_GEN_9 & (~batchHasData | $signed(_GEN_10) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :79:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :197:20, :201:{28,40}, :202:22
          batchMax <= _GEN_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :161:23, :163:18, :165:30
        else if (~_GEN_6 & (~batchHasData | $signed(_GEN_7) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :79:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :197:20, :201:{28,40}, :202:22
          batchMax <= _GEN_7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :161:23, :163:18, :165:30
        else if (~_GEN_3 & (~batchHasData | $signed(_GEN_4) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :79:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :197:20, :201:{28,40}, :202:22
          batchMax <= _GEN_4;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :161:23, :163:18, :165:30
        else if (~_GEN_0 & (~batchHasData | $signed(_GEN_1) > $signed(batchMax)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :79:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :197:20, :201:{28,40}, :202:22
          batchMax <= _GEN_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :161:23, :163:18, :165:30
        if (~_GEN_9 & (~batchHasData | $signed(_GEN_10) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :80:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :198:20, :204:{28,40}, :205:22
          batchMin <= _GEN_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30
        else if (~_GEN_6 & (~batchHasData | $signed(_GEN_7) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :80:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :198:20, :204:{28,40}, :205:22
          batchMin <= _GEN_7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30
        else if (~_GEN_3 & (~batchHasData | $signed(_GEN_4) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :80:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :198:20, :204:{28,40}, :205:22
          batchMin <= _GEN_4;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30
        else if (~_GEN_0 & (~batchHasData | $signed(_GEN_1) < $signed(batchMin)))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :80:25, :81:29, :134:30, :161:{14,23}, :163:18, :164:22, :165:30, :195:29, :196:{15,30}, :198:20, :204:{28,40}, :205:22
          batchMin <= _GEN_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30
      end
      batchHasData <=
        ~_GEN_17
        & (_GEN_18
             ? (_GEN_9 ? _GEN_20 | _GEN_19 : ~batchHasData | _GEN_20 | _GEN_19)
             : batchHasData);	// src/main/scala/qvu/PositQuantizeToInt4.scala:81:29, :161:14, :177:{15,26}, :181:18, :192:{22,36}, :195:29, :196:{15,30}, :199:24
      state <= _GEN_16[state];	// src/main/scala/qvu/PositQuantizeToInt4.scala:85:22, :177:{15,26}, :191:11, :192:{22,36}, :230:11, :231:{22,35}, :336:11, :337:{22,37}, :339:11
      if (_GEN_17 | ~_GEN_18) begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:{15,26}, :184:28, :192:{22,36}
      end
      else begin	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :184:28, :192:36
        automatic logic        _GEN_33;	// src/main/scala/qvu/PositQuantizeToInt4.scala:211:33
        automatic logic [32:0] _binWidth_T = batchMax - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :212:37
        automatic logic [32:0] binWidth;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:75
        automatic logic [32:0] _tempIndex_T = _GEN_1 - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30, :215:37
        automatic logic [32:0] tempIndex;	// src/main/scala/qvu/PositQuantizeToInt4.scala:215:60
        automatic logic [2:0]  safeIndex;	// src/main/scala/qvu/PositQuantizeToInt4.scala:218:40, :219:44, :220:25
        automatic logic [15:0] _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:224:58
        automatic logic        _GEN_34;	// src/main/scala/qvu/PositQuantizeToInt4.scala:211:33
        automatic logic [32:0] _binWidth_T_11 = batchMax - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :212:37
        automatic logic [32:0] binWidth_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:75
        automatic logic [32:0] _tempIndex_T_9 = _GEN_4 - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30, :215:37
        automatic logic [32:0] tempIndex_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:215:60
        automatic logic [2:0]  safeIndex_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:218:40, :219:44, :220:25
        automatic logic [15:0] _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:224:58
        automatic logic        _GEN_35;	// src/main/scala/qvu/PositQuantizeToInt4.scala:211:33
        automatic logic [32:0] _binWidth_T_22 = batchMax - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :212:37
        automatic logic [32:0] binWidth_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:212:75
        automatic logic [32:0] _tempIndex_T_18 = _GEN_7 - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30, :215:37
        automatic logic [32:0] tempIndex_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:215:60
        automatic logic [2:0]  safeIndex_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:218:40, :219:44, :220:25
        automatic logic [15:0] _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:224:58
        automatic logic        _GEN_36 =
          $signed(_GEN_10) >= $signed(batchMin) & $signed(_GEN_10) <= $signed(batchMax);	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :161:23, :163:18, :165:30, :211:{21,33,42}
        automatic logic [32:0] _binWidth_T_33 = batchMax - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :212:37
        automatic logic [32:0] binWidth_3 =
          (($signed(_binWidth_T_33) < 33'sh0 ? 33'h0 - _binWidth_T_33 : _binWidth_T_33)
           + 33'h8) / 33'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:{37,49,60,75}
        automatic logic [32:0] _tempIndex_T_27 = _GEN_10 - batchMin;	// src/main/scala/qvu/PositQuantizeToInt4.scala:80:25, :161:23, :163:18, :165:30, :215:37
        automatic logic [32:0] tempIndex_3 =
          ($signed(_tempIndex_T_27) < 33'sh0 ? 33'h0 - _tempIndex_T_27 : _tempIndex_T_27)
          / binWidth_3;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:75, :215:{37,49,60}
        automatic logic [2:0]  safeIndex_3 =
          tempIndex_3 < 33'h8 ? tempIndex_3[2:0] : 3'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :212:75, :215:60, :218:40, :219:{29,44}, :220:{25,37}
        automatic logic [15:0] _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:224:58
        _GEN_33 =
          $signed(_GEN_1) >= $signed(batchMin) & $signed(_GEN_1) <= $signed(batchMax);	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :161:23, :163:18, :165:30, :211:{21,33,42}
        binWidth =
          (($signed(_binWidth_T) < 33'sh0 ? 33'h0 - _binWidth_T : _binWidth_T) + 33'h8)
          / 33'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:{37,49,60,75}
        tempIndex =
          ($signed(_tempIndex_T) < 33'sh0 ? 33'h0 - _tempIndex_T : _tempIndex_T)
          / binWidth;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:75, :215:{37,49,60}
        safeIndex = tempIndex < 33'h8 ? tempIndex[2:0] : 3'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :212:75, :215:60, :218:40, :219:{29,44}, :220:{25,37}
        _histogram_T_2 = histogram[safeIndex] + 16'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :218:40, :219:44, :220:25, :224:58
        _GEN_34 =
          $signed(_GEN_4) >= $signed(batchMin) & $signed(_GEN_4) <= $signed(batchMax);	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :161:23, :163:18, :165:30, :211:{21,33,42}
        binWidth_1 =
          (($signed(_binWidth_T_11) < 33'sh0 ? 33'h0 - _binWidth_T_11 : _binWidth_T_11)
           + 33'h8) / 33'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:{37,49,60,75}
        tempIndex_1 =
          ($signed(_tempIndex_T_9) < 33'sh0 ? 33'h0 - _tempIndex_T_9 : _tempIndex_T_9)
          / binWidth_1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:75, :215:{37,49,60}
        safeIndex_1 = tempIndex_1 < 33'h8 ? tempIndex_1[2:0] : 3'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :212:75, :215:60, :218:40, :219:{29,44}, :220:{25,37}
        _histogram_T_6 = histogram[safeIndex_1] + 16'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :218:40, :219:44, :220:25, :224:58
        _GEN_35 =
          $signed(_GEN_7) >= $signed(batchMin) & $signed(_GEN_7) <= $signed(batchMax);	// src/main/scala/qvu/PositQuantizeToInt4.scala:79:25, :80:25, :161:23, :163:18, :165:30, :211:{21,33,42}
        binWidth_2 =
          (($signed(_binWidth_T_22) < 33'sh0 ? 33'h0 - _binWidth_T_22 : _binWidth_T_22)
           + 33'h8) / 33'h8;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:{37,49,60,75}
        tempIndex_2 =
          ($signed(_tempIndex_T_18) < 33'sh0 ? 33'h0 - _tempIndex_T_18 : _tempIndex_T_18)
          / binWidth_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:76:29, :97:16, :212:75, :215:{37,49,60}
        safeIndex_2 = tempIndex_2 < 33'h8 ? tempIndex_2[2:0] : 3'h7;	// src/main/scala/qvu/PositQuantizeToInt4.scala:177:26, :212:75, :215:60, :218:40, :219:{29,44}, :220:{25,37}
        _histogram_T_10 = histogram[safeIndex_2] + 16'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :218:40, :219:44, :220:25, :224:58
        _histogram_T_14 = histogram[safeIndex_3] + 16'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :218:40, :219:44, :220:25, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h0)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h0] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h0)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h0] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h0)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h0] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h0)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h0] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h1)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h1] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h1)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h1] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h1)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h1] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h1)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h1] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h2)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h2] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h2)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h2] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h2)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h2] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h2)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h2] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h3)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h3] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h3)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h3] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h3)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h3] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h3)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h3] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h4)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h4] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h4)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h4] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h4)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h4] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h4)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h4] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h5)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h5] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h5)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h5] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h5)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h5] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h5)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h5] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & safeIndex_3 == 3'h6)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h6] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & safeIndex_2 == 3'h6)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h6] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & safeIndex_1 == 3'h6)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h6] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & safeIndex == 3'h6)	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :177:26, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h6] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3) & (&safeIndex_3))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h7] <= _histogram_T_14;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2) & (&safeIndex_2))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h7] <= _histogram_T_10;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1) & (&safeIndex_1))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h7] <= _histogram_T_6;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        else if (~_GEN_0 & _GEN_33 & (|binWidth) & (&safeIndex))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :88:26, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :218:40, :219:44, :220:25, :224:34
          histogram[3'h7] <= _histogram_T_2;	// src/main/scala/qvu/PositQuantizeToInt4.scala:88:26, :177:26, :224:58
        if (~_GEN_9 & _GEN_36 & (|binWidth_3))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :225:28
          histogramTotal <= histogramTotal + 20'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31, :225:46
        else if (~_GEN_6 & _GEN_35 & (|binWidth_2))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :225:28
          histogramTotal <= histogramTotal + 20'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31, :225:46
        else if (~_GEN_3 & _GEN_34 & (|binWidth_1))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :225:28
          histogramTotal <= histogramTotal + 20'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31, :225:46
        else if (~_GEN_0 & _GEN_33 & (|binWidth))	// src/main/scala/qvu/PositQuantizeToInt4.scala:69:36, :89:31, :134:30, :161:{14,23}, :164:22, :165:30, :195:29, :211:{33,55}, :212:75, :213:{26,33}, :225:28
          histogramTotal <= histogramTotal + 20'h1;	// src/main/scala/qvu/PositQuantizeToInt4.scala:89:31, :225:46
      end
    end
  end // always @(posedge)
  verilator_directives verilatorDirectiveInst ();	// src/main/scala/qvu/PositQuantizeToInt4.scala:36:38
  assign io_int4_o =
    {{_GEN_9
        ? 4'h0
        : $signed(quantizedValue_3) > 33'sh7
            ? 4'h7
            : $signed(quantizedValue_3) < -33'sh8 ? 4'h8 : quantizedValue_3[3:0]},
     {_GEN_6
        ? 4'h0
        : $signed(quantizedValue_2) > 33'sh7
            ? 4'h7
            : $signed(quantizedValue_2) < -33'sh8 ? 4'h8 : quantizedValue_2[3:0]},
     {_GEN_3
        ? 4'h0
        : $signed(quantizedValue_1) > 33'sh7
            ? 4'h7
            : $signed(quantizedValue_1) < -33'sh8 ? 4'h8 : quantizedValue_1[3:0]},
     {_GEN_0
        ? 4'h0
        : $signed(quantizedValue) > 33'sh7
            ? 4'h7
            : $signed(quantizedValue) < -33'sh8 ? 4'h8 : quantizedValue[3:0]}};	// src/main/scala/qvu/PositQuantizeToInt4.scala:18:7, :67:34, :68:34, :161:14, :345:34, :347:27, :356:34, :357:24, :400:24, :404:{28,40}, :405:{21,39}, :406:{35,47}, :407:{21,39}, :409:{21,38}
endmodule

module QvuTop(	// src/main/scala/qvu/QvuTop.scala:20:8
  input         clock,	// src/main/scala/qvu/QvuTop.scala:20:8
                reset,	// src/main/scala/qvu/QvuTop.scala:20:8
  input  [31:0] io_posit_i1_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i1_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i1_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i1_3,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i2_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i2_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i2_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_i2_3,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [3:0]  io_op,	// src/main/scala/qvu/QvuTop.scala:69:15
  input         io_Isposit,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_Outposit,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [63:0] io_float_i_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i_3,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i2_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i2_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i2_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_i2_3,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [2:0]  io_float_mode,	// src/main/scala/qvu/QvuTop.scala:69:15
  input         io_float_posit,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [5:0]  io_src_posit_width,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [2:0]  io_vector_size,	// src/main/scala/qvu/QvuTop.scala:69:15
  input  [5:0]  io_dst_posit_width,	// src/main/scala/qvu/QvuTop.scala:69:15
  output [63:0] io_float_o_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_o_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_o_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_o_3,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_float_dot_o,	// src/main/scala/qvu/QvuTop.scala:69:15
  output [31:0] io_posit_o_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_o_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_o_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_o_3,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_posit_dot_o,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_int_o_0,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_int_o_1,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_int_o_2,	// src/main/scala/qvu/QvuTop.scala:69:15
                io_int_o_3	// src/main/scala/qvu/QvuTop.scala:69:15
);

  wire [3:0][3:0]  _quantizeInt4_io_int4_o;	// src/main/scala/qvu/QvuTop.scala:267:31
  wire [3:0][7:0]  _quantizeInt8_io_int8_o;	// src/main/scala/qvu/QvuTop.scala:245:31
  wire [3:0]       _floatDecode1_io_Sign;	// src/main/scala/qvu/QvuTop.scala:106:28
  wire [3:0][8:0]  _floatDecode1_io_Exp;	// src/main/scala/qvu/QvuTop.scala:106:28
  wire [3:0][23:0] _floatDecode1_io_Frac;	// src/main/scala/qvu/QvuTop.scala:106:28
  wire [3:0]       _decode1_io_Sign;	// src/main/scala/qvu/QvuTop.scala:102:23
  wire [3:0][7:0]  _decode1_io_Exp;	// src/main/scala/qvu/QvuTop.scala:102:23
  wire [3:0][27:0] _decode1_io_Frac;	// src/main/scala/qvu/QvuTop.scala:102:23
  wire [3:0][31:0] _GEN = '{32'h0, 32'h0, 32'h0, 32'h0};	// src/main/scala/qvu/QvuTop.scala:193:21, :194:28, :210:28
  wire [2:0]       ACTUAL_VECTOR_SIZE = io_vector_size == 3'h0 ? 3'h4 : io_vector_size;	// src/main/scala/qvu/QvuTop.scala:173:{36,52}
  wire             _valid_range_2_T = ACTUAL_VECTOR_SIZE > 3'h2;	// src/main/scala/qvu/QvuTop.scala:173:36, :189:29
  wire             _GEN_0 = io_op == 4'h0;	// src/main/scala/qvu/QvuTop.scala:244:15
  wire             _GEN_1 = io_op == 4'h1;	// src/main/scala/qvu/QvuTop.scala:266:20
  wire [3:0]       _GEN_2 =
    io_Isposit
      ? {{ACTUAL_VECTOR_SIZE[2] & _decode1_io_Sign[2'h3]},
         {_valid_range_2_T & _decode1_io_Sign[2'h2]},
         {(|(ACTUAL_VECTOR_SIZE[2:1])) & _decode1_io_Sign[2'h1]},
         {(|ACTUAL_VECTOR_SIZE) & _decode1_io_Sign[2'h0]}}
      : {{ACTUAL_VECTOR_SIZE[2] & ~io_Isposit & _floatDecode1_io_Sign[2'h3]},
         {_valid_range_2_T & ~io_Isposit & _floatDecode1_io_Sign[2'h2]},
         {(|(ACTUAL_VECTOR_SIZE[2:1])) & ~io_Isposit & _floatDecode1_io_Sign[2'h1]},
         {(|ACTUAL_VECTOR_SIZE) & ~io_Isposit & _floatDecode1_io_Sign[2'h0]}};	// src/main/scala/qvu/QvuTop.scala:20:8, :102:23, :106:28, :110:23, :149:18, :156:26, :173:36, :181:34, :182:55, :189:29, :193:21, :200:29, :201:23, :217:29, :218:31, :233:23
  wire [3:0][7:0]  _GEN_3 =
    io_Isposit
      ? {{ACTUAL_VECTOR_SIZE[2] ? _decode1_io_Exp[2'h3] : 8'h0},
         {_valid_range_2_T ? _decode1_io_Exp[2'h2] : 8'h0},
         {(|(ACTUAL_VECTOR_SIZE[2:1])) ? _decode1_io_Exp[2'h1] : 8'h0},
         {(|ACTUAL_VECTOR_SIZE) ? _decode1_io_Exp[2'h0] : 8'h0}}
      : {{~(ACTUAL_VECTOR_SIZE[2]) | io_Isposit ? 8'h0 : _floatDecode1_io_Exp[2'h3][7:0]},
         {~_valid_range_2_T | io_Isposit ? 8'h0 : _floatDecode1_io_Exp[2'h2][7:0]},
         {~(|(ACTUAL_VECTOR_SIZE[2:1])) | io_Isposit
            ? 8'h0
            : _floatDecode1_io_Exp[2'h1][7:0]},
         {~(|ACTUAL_VECTOR_SIZE) | io_Isposit ? 8'h0 : _floatDecode1_io_Exp[2'h0][7:0]}};	// src/main/scala/qvu/QvuTop.scala:20:8, :102:23, :106:28, :111:23, :150:18, :157:26, :173:36, :181:34, :182:55, :189:29, :193:21, :200:29, :202:23, :217:29, :219:31, :234:23
  wire [3:0][32:0] pir_frac =
    {{ACTUAL_VECTOR_SIZE[2]
        ? (io_Isposit
             ? {5'h0, _decode1_io_Frac[2'h3]}
             : {10'h0,
                io_Isposit | ~(ACTUAL_VECTOR_SIZE[2])
                  ? 23'h0
                  : _floatDecode1_io_Frac[2'h3][22:0]})
        : 33'h0},
     {_valid_range_2_T
        ? (io_Isposit
             ? {5'h0, _decode1_io_Frac[2'h2]}
             : {10'h0,
                io_Isposit | ~_valid_range_2_T
                  ? 23'h0
                  : _floatDecode1_io_Frac[2'h2][22:0]})
        : 33'h0},
     {(|(ACTUAL_VECTOR_SIZE[2:1]))
        ? (io_Isposit
             ? {5'h0, _decode1_io_Frac[2'h1]}
             : {10'h0,
                io_Isposit | ~(|(ACTUAL_VECTOR_SIZE[2:1]))
                  ? 23'h0
                  : _floatDecode1_io_Frac[2'h1][22:0]})
        : 33'h0},
     {(|ACTUAL_VECTOR_SIZE)
        ? (io_Isposit
             ? {5'h0, _decode1_io_Frac[2'h0]}
             : {10'h0,
                io_Isposit | ~(|ACTUAL_VECTOR_SIZE)
                  ? 23'h0
                  : _floatDecode1_io_Frac[2'h0][22:0]})
        : 33'h0}};	// src/main/scala/qvu/QvuTop.scala:20:8, :102:23, :106:28, :112:23, :151:18, :157:26, :158:26, :173:36, :181:34, :182:55, :189:29, :193:21, :200:29, :203:23, :217:29, :220:31, :235:23
  PositDecode decode1 (	// src/main/scala/qvu/QvuTop.scala:102:23
    .io_posit
      (io_Isposit
         ? {{io_posit_i1_3}, {io_posit_i1_2}, {io_posit_i1_1}, {io_posit_i1_0}}
         : _GEN),	// src/main/scala/qvu/QvuTop.scala:102:23, :193:21, :194:28, :210:28
    .io_Sign  (_decode1_io_Sign),
    .io_Exp   (_decode1_io_Exp),
    .io_Frac  (_decode1_io_Frac)
  );
  PositDecode decode2 (	// src/main/scala/qvu/QvuTop.scala:103:23
    .io_posit
      (io_Isposit
         ? {{io_posit_i2_3}, {io_posit_i2_2}, {io_posit_i2_1}, {io_posit_i2_0}}
         : _GEN),	// src/main/scala/qvu/QvuTop.scala:103:23, :193:21, :194:28, :195:28, :210:28, :211:28
    .io_Sign  (/* unused */),
    .io_Exp   (/* unused */),
    .io_Frac  (/* unused */)
  );
  FloatDecode floatDecode1 (	// src/main/scala/qvu/QvuTop.scala:106:28
    .io_float
      (io_Isposit
         ? _GEN
         : {{io_float_i_3[31:0]},
            {io_float_i_2[31:0]},
            {io_float_i_1[31:0]},
            {io_float_i_0[31:0]}}),	// src/main/scala/qvu/QvuTop.scala:106:28, :144:25, :193:21, :194:28, :196:28, :210:28, :212:28
    .io_Sign   (_floatDecode1_io_Sign),
    .io_Exp    (_floatDecode1_io_Exp),
    .io_Frac   (_floatDecode1_io_Frac),
    .io_isNaN  (/* unused */),
    .io_isInf  (/* unused */),
    .io_isZero (/* unused */)
  );
  FloatDecode floatDecode2 (	// src/main/scala/qvu/QvuTop.scala:107:28
    .io_float
      (io_Isposit
         ? _GEN
         : {{io_float_i2_3[31:0]},
            {io_float_i2_2[31:0]},
            {io_float_i2_1[31:0]},
            {io_float_i2_0[31:0]}}),	// src/main/scala/qvu/QvuTop.scala:107:28, :145:25, :193:21, :194:28, :197:28, :210:28, :213:28
    .io_Sign   (/* unused */),
    .io_Exp    (/* unused */),
    .io_Frac   (/* unused */),
    .io_isNaN  (/* unused */),
    .io_isInf  (/* unused */),
    .io_isZero (/* unused */)
  );
  PositQuantizeToInt8 quantizeInt8 (	// src/main/scala/qvu/QvuTop.scala:245:31
    .clock         (clock),
    .reset         (reset),
    .io_pir_sign_i (_GEN_2),	// src/main/scala/qvu/QvuTop.scala:110:23
    .io_pir_exp_i  (_GEN_3),	// src/main/scala/qvu/QvuTop.scala:111:23
    .io_pir_frac_i (pir_frac),	// src/main/scala/qvu/QvuTop.scala:112:23
    .io_int8_o     (_quantizeInt8_io_int8_o)
  );
  PositQuantizeToInt4 quantizeInt4 (	// src/main/scala/qvu/QvuTop.scala:267:31
    .clock         (clock),
    .reset         (reset),
    .io_pir_sign_i (_GEN_2),	// src/main/scala/qvu/QvuTop.scala:110:23
    .io_pir_exp_i  (_GEN_3),	// src/main/scala/qvu/QvuTop.scala:111:23
    .io_pir_frac_i (pir_frac),	// src/main/scala/qvu/QvuTop.scala:112:23
    .io_int4_o     (_quantizeInt4_io_int4_o)
  );
  assign io_float_o_0 = 64'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:38, :197:38
  assign io_float_o_1 = 64'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:38, :197:38
  assign io_float_o_2 = 64'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:38, :197:38
  assign io_float_o_3 = 64'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:38, :197:38
  assign io_float_dot_o = 64'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:38, :197:38
  assign io_posit_o_0 = 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:28, :197:28, :210:38, :211:38
  assign io_posit_o_1 = 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:28, :197:28, :210:38, :211:38
  assign io_posit_o_2 = 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:28, :197:28, :210:38, :211:38
  assign io_posit_o_3 = 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:28, :197:28, :210:38, :211:38
  assign io_posit_dot_o = 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :196:28, :197:28, :210:38, :211:38
  assign io_int_o_0 =
    _GEN_0
      ? ((|ACTUAL_VECTOR_SIZE)
           ? {{24{_quantizeInt8_io_int8_o[2'h0][7]}}, _quantizeInt8_io_int8_o[2'h0]}
           : 32'h0)
      : _GEN_1 & (|ACTUAL_VECTOR_SIZE)
          ? {{28{_quantizeInt4_io_int4_o[2'h0][3]}}, _quantizeInt4_io_int4_o[2'h0]}
          : 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :141:18, :173:36, :189:29, :196:28, :197:28, :210:38, :211:38, :244:{15,24}, :245:31, :260:29, :262:{22,54}, :266:{20,29}, :267:31, :282:29, :284:{22,54}
  assign io_int_o_1 =
    _GEN_0
      ? ((|(ACTUAL_VECTOR_SIZE[2:1]))
           ? {{24{_quantizeInt8_io_int8_o[2'h1][7]}}, _quantizeInt8_io_int8_o[2'h1]}
           : 32'h0)
      : _GEN_1 & (|(ACTUAL_VECTOR_SIZE[2:1]))
          ? {{28{_quantizeInt4_io_int4_o[2'h1][3]}}, _quantizeInt4_io_int4_o[2'h1]}
          : 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :141:18, :173:36, :189:29, :196:28, :197:28, :210:38, :211:38, :244:{15,24}, :245:31, :260:29, :262:{22,54}, :266:{20,29}, :267:31, :282:29, :284:{22,54}
  assign io_int_o_2 =
    _GEN_0
      ? (_valid_range_2_T
           ? {{24{_quantizeInt8_io_int8_o[2'h2][7]}}, _quantizeInt8_io_int8_o[2'h2]}
           : 32'h0)
      : _GEN_1 & _valid_range_2_T
          ? {{28{_quantizeInt4_io_int4_o[2'h2][3]}}, _quantizeInt4_io_int4_o[2'h2]}
          : 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :141:18, :181:34, :189:29, :196:28, :197:28, :210:38, :211:38, :244:{15,24}, :245:31, :260:29, :262:{22,54}, :266:{20,29}, :267:31, :282:29, :284:{22,54}
  assign io_int_o_3 =
    _GEN_0
      ? (ACTUAL_VECTOR_SIZE[2]
           ? {{24{_quantizeInt8_io_int8_o[2'h3][7]}}, _quantizeInt8_io_int8_o[2'h3]}
           : 32'h0)
      : _GEN_1 & ACTUAL_VECTOR_SIZE[2]
          ? {{28{_quantizeInt4_io_int4_o[2'h3][3]}}, _quantizeInt4_io_int4_o[2'h3]}
          : 32'h0;	// src/main/scala/qvu/QvuTop.scala:20:8, :141:18, :173:36, :182:55, :189:29, :196:28, :197:28, :210:38, :211:38, :244:{15,24}, :245:31, :260:29, :262:{22,54}, :266:{20,29}, :267:31, :282:29, :284:{22,54}
endmodule


// ----- 8< ----- FILE "./lzc.sv" ----- 8< -----

// Generated by CIRCT firtool-1.62.0
// Copyright 2016 ETH Zurich and University of Bologna.
// Copyright and related rights are licensed under the Solderpad Hardware
// License, Version 0.51 (the "License"); you may not use this file except in
// compliance with the License.  You may obtain a copy of the License at
// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
// or agreed to in writing, software, hardware and materials distributed under
// this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

/// cf_math_pkg: Constant Function Implementations of Mathematical Functions for HDL Elaboration
///
/// This package contains a collection of mathematical functions that are commonly used when defining
/// the value of constants in HDL code.  These functions are implemented as Verilog constants
/// functions.  Introduced in Verilog 2001 (IEEE Std 1364-2001), a constant function (§ 10.3.5) is a
/// function whose value can be evaluated at compile time or during elaboration.  A constant function
/// must be called with arguments that are constants.
package cf_math_pkg;

    /// Ceiled Division of Two Natural Numbers
    ///
    /// Returns the quotient of two natural numbers, rounded towards plus infinity.
    function automatic integer ceil_div (input longint dividend, input longint divisor);
        automatic longint remainder;

        // pragma translate_off
        `ifndef VERILATOR
        if (dividend < 0) begin
            $fatal(1, "Dividend %0d is not a natural number!", dividend);
        end

        if (divisor < 0) begin
            $fatal(1, "Divisor %0d is not a natural number!", divisor);
        end

        if (divisor == 0) begin
            $fatal(1, "Division by zero!");
        end
        `endif
        // pragma translate_on

        remainder = dividend;
        for (ceil_div = 0; remainder > 0; ceil_div++) begin
            remainder = remainder - divisor;
        end
    endfunction

    function automatic integer clog(input integer n);
        begin
            n = n-1;
            for(clog=0; n>0; clog=clog+1)
                n = n>>1;
        end
    endfunction
    /// Index width required to be able to represent up to `num_idx` indices as a binary
    /// encoded signal.
    /// Ensures that the minimum width if an index signal is `1`, regardless of parametrization.
    ///
    /// Sample usage in type definition:
    /// As parameter:
    ///   `parameter type idx_t = logic[cf_math_pkg::idx_width(NumIdx)-1:0]`
    /// As typedef:
    ///   `typedef logic [cf_math_pkg::idx_width(NumIdx)-1:0] idx_t`
    function automatic integer unsigned idx_width (input integer unsigned num_idx);
        return (num_idx > 32'd1) ? unsigned'(clog(num_idx)) : 32'd1;
    endfunction

endpackage

// Copyright (c) 2018 - 2019 ETH Zurich, University of Bologna
// All rights reserved.
//
// This code is under development and not yet released to the public.
// Until it is released, the code is under the copyright of ETH Zurich and
// the University of Bologna, and may contain confidential and/or unpublished
// work. Any reuse/redistribution is strictly forbidden without written
// permission from ETH Zurich.
//
// Bug fixes and contributions will eventually be released under the
// SolderPad open hardware license in the context of the PULP platform
// (http://www.pulp-platform.org), under the copyright of ETH Zurich and the
// University of Bologna.

/// A trailing zero counter / leading zero counter.
/// Set MODE to 0 for trailing zero counter => cnt_o is the number of trailing zeros (from the LSB)
/// Set MODE to 1 for leading zero counter  => cnt_o is the number of leading zeros  (from the MSB)
/// If the input does not contain a zero, `empty_o` is asserted. Additionally `cnt_o` contains
/// the maximum number of zeros - 1. For example:
///   in_i = 000_0000, empty_o = 1, cnt_o = 6 (mode = 0)
///   in_i = 000_0001, empty_o = 0, cnt_o = 0 (mode = 0)
///   in_i = 000_1000, empty_o = 0, cnt_o = 3 (mode = 0)
/// Furthermore, this unit contains a more efficient implementation for Verilator (simulation only).
/// This speeds up simulation significantly.
module LZC #(
  /// The width of the input vector.
  parameter int unsigned WIDTH = 2,
  /// Mode selection: 0 -> trailing zero, 1 -> leading zero
  parameter bit          MODE  = 1'b0,
  /// Dependent parameter. Do **not** change!
  ///
  /// Width of the output signal with the zero count.
  parameter int unsigned CNT_WIDTH = cf_math_pkg::idx_width(WIDTH)
) (
  /// Input vector to be counted.
  input  logic [WIDTH-1:0]     in_i,
  /// Count of the leading / trailing zeros.
  output logic [CNT_WIDTH-1:0] cnt_o,
  /// Counter is empty: Asserted if all bits in in_i are zero.
  output logic                 empty_o
);

  if (WIDTH == 1) begin : gen_degenerate_lzc

    assign cnt_o[0] = !in_i[0];
    assign empty_o = !in_i[0];

  end else begin : gen_lzc

    localparam int unsigned NumLevels = cf_math_pkg::clog(WIDTH);

    // pragma translate_off
    initial begin
      assert(WIDTH > 0) else $fatal(1, "input must be at least one bit wide");
    end
    // pragma translate_on

    logic [WIDTH-1:0][NumLevels-1:0] index_lut;
    logic [2**NumLevels-1:0] sel_nodes;
    logic [2**NumLevels-1:0][NumLevels-1:0] index_nodes;

    logic [WIDTH-1:0] in_tmp;

    // reverse vector if required
    always_comb begin : flip_vector
      for (int unsigned i = 0; i < WIDTH; i++) begin
        in_tmp[i] = (MODE) ? in_i[WIDTH-1-i] : in_i[i];
      end
    end

    for (genvar j = 0; unsigned'(j) < WIDTH; j++) begin : g_index_lut
      assign index_lut[j] = (NumLevels)'(unsigned'(j));
    end

    for (genvar level = 0; unsigned'(level) < NumLevels; level++) begin : g_levels
      if (unsigned'(level) == NumLevels - 1) begin : g_last_level
        for (genvar k = 0; k < 2 ** level; k++) begin : g_level
          // if two successive indices are still in the vector...
          if (unsigned'(k) * 2 < WIDTH - 1) begin : g_reduce
            assign sel_nodes[2 ** level - 1 + k] = in_tmp[k * 2] | in_tmp[k * 2 + 1];
            assign index_nodes[2 ** level - 1 + k] = (in_tmp[k * 2] == 1'b1)
              ? index_lut[k * 2] :
                index_lut[k * 2 + 1];
          end
          // if only the first index is still in the vector...
          if (unsigned'(k) * 2 == WIDTH - 1) begin : g_base
            assign sel_nodes[2 ** level - 1 + k] = in_tmp[k * 2];
            assign index_nodes[2 ** level - 1 + k] = index_lut[k * 2];
          end
          // if index is out of range
          if (unsigned'(k) * 2 > WIDTH - 1) begin : g_out_of_range
            assign sel_nodes[2 ** level - 1 + k] = 1'b0;
            assign index_nodes[2 ** level - 1 + k] = '0;
          end
        end
      end else begin : g_not_last_level
        for (genvar l = 0; l < 2 ** level; l++) begin : g_level
          assign sel_nodes[2 ** level - 1 + l] =
              sel_nodes[2 ** (level + 1) - 1 + l * 2] | sel_nodes[2 ** (level + 1) - 1 + l * 2 + 1];
          assign index_nodes[2 ** level - 1 + l] = (sel_nodes[2 ** (level + 1) - 1 + l * 2] == 1'b1)
            ? index_nodes[2 ** (level + 1) - 1 + l * 2] :
              index_nodes[2 ** (level + 1) - 1 + l * 2 + 1];
        end
      end
    end

    assign cnt_o = NumLevels > unsigned'(0) ? index_nodes[0] : {(cf_math_pkg::clog(WIDTH)) {1'b0}};
    assign empty_o = NumLevels > unsigned'(0) ? ~sel_nodes[0] : ~(|in_i);

  end : gen_lzc

endmodule : LZC

// ----- 8< ----- FILE "./verilator_directives.v" ----- 8< -----

/* verilator lint_off WIDTHEXPAND */
module verilator_directives;
  // 空模块，仅用于添加Verilator属性
endmodule
/* verilator lint_on WIDTHEXPAND */

// ----- 8< ----- FILE "firrtl_black_box_resource_files.f" ----- 8< -----
