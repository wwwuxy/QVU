# project source
TOPNAME = QvuTop
VSRCS += $(shell find $(abspath ./vsrc) -name "*.sv")
CSRCS += $(shell find $(abspath ./csrc) -name "*.cpp")
CONFIG_H = config.h

# SoftPosit库相关设置
SOFTPOSIT_DIR = /home/wuxy/SoftPosit
SOFTPOSIT_INCLUDE = -I$(SOFTPOSIT_DIR)/source/include
SOFTPOSIT_LIB = $(SOFTPOSIT_DIR)/build/lib/libsoftposit.a

# verilator flags
VERILATOR_FLAGS += -Wall --cc --trace --exe --build --top-module $(TOPNAME)
VERILATOR_FLAGS += -Wno-DECLFILENAME -Wno-PINCONNECTEMPTY -Wno-UNUSEDSIGNAL -Wno-UNOPTFLAT -Wno-WIDTHEXPAND
VERILATOR_FLAGS += --threads-dpi all
VERILATOR_FLAGS += -j 16
VERILATOR_FLAGS += $(SOFTPOSIT_INCLUDE)

include .config

$(CONFIG_H): .config
	@echo "/* Auto-generated by Makefile from .config */" > $(CONFIG_H)
	@echo "#ifndef CONFIG_H" >> $(CONFIG_H)
	@echo "#define CONFIG_H" >> $(CONFIG_H)
	@echo "" >> $(CONFIG_H)
	@awk 'BEGIN { FS="="; OFS=" "; } \
		/^[^#]/ { \
			if ($$2 == "y") { \
				print "#define", $$1, "1"; \
			} else if ($$2 == "n" || $$2 == "") { \
				print "#define", $$1, "0"; \
			} \
		}' .config >> $(CONFIG_H)

	@echo "#endif // CONFIG_H" >> $(CONFIG_H)


verilog:
	export JAVA_OPTS="-Xmx16G -Xms8G -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:MaxGCPauseMillis=200 -XX:ParallelGCThreads=8" && \
	sbt -v -no-colors \
		-J-Xmx16G -J-Xms8G \
		-J-XX:+UseG1GC \
		-J-XX:G1HeapRegionSize=32M \
		-J-XX:MaxGCPauseMillis=200 \
		-J-XX:ParallelGCThreads=8 \
		-Dsbt.task.timings=true \
		-Dsbt.ci=true \
		-DmaxThreads=8 \
		"runMain qvu.Elaborate"
	python3 clean_line.py

run:${CSRCS} ${VSRCS}
	verilator ${VERILATOR_FLAGS} ${CSRCS} ${VSRCS}
	@echo "链接SoftPosit库..."
	# 不再需要链接SoftPosit库，已直接在代码中实现必要函数
	./obj_dir/VQvuTop

wave:
	gtkwave waveform.vcd

git:
	@if [ -n "$$(find . -name "*.vcd" 2>/dev/null)" ]; then \
		echo "删除.vcd文件..."; \
		find . -name "*.vcd" -delete; \
	else \
		echo "未找到.vcd文件，继续执行..."; \
	fi
	git add .
	git commit

push:
	git push

menuconfig:
	menuconfig
	make config.h

count:
	@echo "Number of Scala files:"
	@echo $(shell find . -type f -name "*.scala" | wc -l)
	@echo "Total lines of Scala code:"
	@echo $(shell find src -name "*.scala" -type f | xargs cat | wc -l)
	@echo "Total lines of Verilog code:"
	@echo $(shell find vsrc -name "*.sv" -type f | xargs cat | wc -l)
	@echo "Total lines of C++ test code in csrc:"
	@echo $(shell find csrc -name "*.cpp" -o -name "*.h" -o -name "*.hpp" -type f | xargs cat | wc -l)


debug:
	make verilog
	make run

clean:
	rm -rf obj_dir